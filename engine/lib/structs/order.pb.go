// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package structs

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Commission_TypeStatus__ET int32

const (
	Commission_TypeStatus_UNDEFINED       Commission_TypeStatus__ET = 0
	Commission_TypeStatus_ORDER           Commission_TypeStatus__ET = 1
	Commission_TypeStatus_CONTRACT_SELLER Commission_TypeStatus__ET = 2
	Commission_TypeStatus_CONTRACT_BUYER  Commission_TypeStatus__ET = 3
)

var Commission_TypeStatus__ET_name = map[int32]string{
	0: "UNDEFINED",
	1: "ORDER",
	2: "CONTRACT_SELLER",
	3: "CONTRACT_BUYER",
}

var Commission_TypeStatus__ET_value = map[string]int32{
	"UNDEFINED":       0,
	"ORDER":           1,
	"CONTRACT_SELLER": 2,
	"CONTRACT_BUYER":  3,
}

func (x Commission_TypeStatus__ET) String() string {
	return proto.EnumName(Commission_TypeStatus__ET_name, int32(x))
}

func (Commission_TypeStatus__ET) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{16, 0, 0}
}

type EventNewOrder struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventNewOrder) Reset()         { *m = EventNewOrder{} }
func (m *EventNewOrder) String() string { return proto.CompactTextString(m) }
func (*EventNewOrder) ProtoMessage()    {}
func (*EventNewOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

func (m *EventNewOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventNewOrder.Unmarshal(m, b)
}
func (m *EventNewOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventNewOrder.Marshal(b, m, deterministic)
}
func (m *EventNewOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventNewOrder.Merge(m, src)
}
func (m *EventNewOrder) XXX_Size() int {
	return xxx_messageInfo_EventNewOrder.Size(m)
}
func (m *EventNewOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_EventNewOrder.DiscardUnknown(m)
}

var xxx_messageInfo_EventNewOrder proto.InternalMessageInfo

func (m *EventNewOrder) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type EventNewContract struct {
	Contract             *Contract `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EventNewContract) Reset()         { *m = EventNewContract{} }
func (m *EventNewContract) String() string { return proto.CompactTextString(m) }
func (*EventNewContract) ProtoMessage()    {}
func (*EventNewContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

func (m *EventNewContract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventNewContract.Unmarshal(m, b)
}
func (m *EventNewContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventNewContract.Marshal(b, m, deterministic)
}
func (m *EventNewContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventNewContract.Merge(m, src)
}
func (m *EventNewContract) XXX_Size() int {
	return xxx_messageInfo_EventNewContract.Size(m)
}
func (m *EventNewContract) XXX_DiscardUnknown() {
	xxx_messageInfo_EventNewContract.DiscardUnknown(m)
}

var xxx_messageInfo_EventNewContract proto.InternalMessageInfo

func (m *EventNewContract) GetContract() *Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

type EventOrderChange struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventOrderChange) Reset()         { *m = EventOrderChange{} }
func (m *EventOrderChange) String() string { return proto.CompactTextString(m) }
func (*EventOrderChange) ProtoMessage()    {}
func (*EventOrderChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{2}
}

func (m *EventOrderChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventOrderChange.Unmarshal(m, b)
}
func (m *EventOrderChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventOrderChange.Marshal(b, m, deterministic)
}
func (m *EventOrderChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventOrderChange.Merge(m, src)
}
func (m *EventOrderChange) XXX_Size() int {
	return xxx_messageInfo_EventOrderChange.Size(m)
}
func (m *EventOrderChange) XXX_DiscardUnknown() {
	xxx_messageInfo_EventOrderChange.DiscardUnknown(m)
}

var xxx_messageInfo_EventOrderChange proto.InternalMessageInfo

func (m *EventOrderChange) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type EventOrderPerformed struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventOrderPerformed) Reset()         { *m = EventOrderPerformed{} }
func (m *EventOrderPerformed) String() string { return proto.CompactTextString(m) }
func (*EventOrderPerformed) ProtoMessage()    {}
func (*EventOrderPerformed) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{3}
}

func (m *EventOrderPerformed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventOrderPerformed.Unmarshal(m, b)
}
func (m *EventOrderPerformed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventOrderPerformed.Marshal(b, m, deterministic)
}
func (m *EventOrderPerformed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventOrderPerformed.Merge(m, src)
}
func (m *EventOrderPerformed) XXX_Size() int {
	return xxx_messageInfo_EventOrderPerformed.Size(m)
}
func (m *EventOrderPerformed) XXX_DiscardUnknown() {
	xxx_messageInfo_EventOrderPerformed.DiscardUnknown(m)
}

var xxx_messageInfo_EventOrderPerformed proto.InternalMessageInfo

func (m *EventOrderPerformed) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type EventContractChange struct {
	Contract             *Contract `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EventContractChange) Reset()         { *m = EventContractChange{} }
func (m *EventContractChange) String() string { return proto.CompactTextString(m) }
func (*EventContractChange) ProtoMessage()    {}
func (*EventContractChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{4}
}

func (m *EventContractChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventContractChange.Unmarshal(m, b)
}
func (m *EventContractChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventContractChange.Marshal(b, m, deterministic)
}
func (m *EventContractChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventContractChange.Merge(m, src)
}
func (m *EventContractChange) XXX_Size() int {
	return xxx_messageInfo_EventContractChange.Size(m)
}
func (m *EventContractChange) XXX_DiscardUnknown() {
	xxx_messageInfo_EventContractChange.DiscardUnknown(m)
}

var xxx_messageInfo_EventContractChange proto.InternalMessageInfo

func (m *EventContractChange) GetContract() *Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

type EventContractPerformed struct {
	Contract             *Contract `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EventContractPerformed) Reset()         { *m = EventContractPerformed{} }
func (m *EventContractPerformed) String() string { return proto.CompactTextString(m) }
func (*EventContractPerformed) ProtoMessage()    {}
func (*EventContractPerformed) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{5}
}

func (m *EventContractPerformed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventContractPerformed.Unmarshal(m, b)
}
func (m *EventContractPerformed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventContractPerformed.Marshal(b, m, deterministic)
}
func (m *EventContractPerformed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventContractPerformed.Merge(m, src)
}
func (m *EventContractPerformed) XXX_Size() int {
	return xxx_messageInfo_EventContractPerformed.Size(m)
}
func (m *EventContractPerformed) XXX_DiscardUnknown() {
	xxx_messageInfo_EventContractPerformed.DiscardUnknown(m)
}

var xxx_messageInfo_EventContractPerformed proto.InternalMessageInfo

func (m *EventContractPerformed) GetContract() *Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

type EventOrderCanceled struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventOrderCanceled) Reset()         { *m = EventOrderCanceled{} }
func (m *EventOrderCanceled) String() string { return proto.CompactTextString(m) }
func (*EventOrderCanceled) ProtoMessage()    {}
func (*EventOrderCanceled) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{6}
}

func (m *EventOrderCanceled) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventOrderCanceled.Unmarshal(m, b)
}
func (m *EventOrderCanceled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventOrderCanceled.Marshal(b, m, deterministic)
}
func (m *EventOrderCanceled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventOrderCanceled.Merge(m, src)
}
func (m *EventOrderCanceled) XXX_Size() int {
	return xxx_messageInfo_EventOrderCanceled.Size(m)
}
func (m *EventOrderCanceled) XXX_DiscardUnknown() {
	xxx_messageInfo_EventOrderCanceled.DiscardUnknown(m)
}

var xxx_messageInfo_EventOrderCanceled proto.InternalMessageInfo

func (m *EventOrderCanceled) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type EventNewWithdrawal struct {
	WithdrawalOrder      *WithdrawalOrder `protobuf:"bytes,1,opt,name=withdrawalOrder,proto3" json:"withdrawalOrder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EventNewWithdrawal) Reset()         { *m = EventNewWithdrawal{} }
func (m *EventNewWithdrawal) String() string { return proto.CompactTextString(m) }
func (*EventNewWithdrawal) ProtoMessage()    {}
func (*EventNewWithdrawal) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{7}
}

func (m *EventNewWithdrawal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventNewWithdrawal.Unmarshal(m, b)
}
func (m *EventNewWithdrawal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventNewWithdrawal.Marshal(b, m, deterministic)
}
func (m *EventNewWithdrawal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventNewWithdrawal.Merge(m, src)
}
func (m *EventNewWithdrawal) XXX_Size() int {
	return xxx_messageInfo_EventNewWithdrawal.Size(m)
}
func (m *EventNewWithdrawal) XXX_DiscardUnknown() {
	xxx_messageInfo_EventNewWithdrawal.DiscardUnknown(m)
}

var xxx_messageInfo_EventNewWithdrawal proto.InternalMessageInfo

func (m *EventNewWithdrawal) GetWithdrawalOrder() *WithdrawalOrder {
	if m != nil {
		return m.WithdrawalOrder
	}
	return nil
}

type EventWithdrawalPerformed struct {
	WithdrawalOrder      *WithdrawalOrder `protobuf:"bytes,1,opt,name=withdrawalOrder,proto3" json:"withdrawalOrder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EventWithdrawalPerformed) Reset()         { *m = EventWithdrawalPerformed{} }
func (m *EventWithdrawalPerformed) String() string { return proto.CompactTextString(m) }
func (*EventWithdrawalPerformed) ProtoMessage()    {}
func (*EventWithdrawalPerformed) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{8}
}

func (m *EventWithdrawalPerformed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventWithdrawalPerformed.Unmarshal(m, b)
}
func (m *EventWithdrawalPerformed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventWithdrawalPerformed.Marshal(b, m, deterministic)
}
func (m *EventWithdrawalPerformed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventWithdrawalPerformed.Merge(m, src)
}
func (m *EventWithdrawalPerformed) XXX_Size() int {
	return xxx_messageInfo_EventWithdrawalPerformed.Size(m)
}
func (m *EventWithdrawalPerformed) XXX_DiscardUnknown() {
	xxx_messageInfo_EventWithdrawalPerformed.DiscardUnknown(m)
}

var xxx_messageInfo_EventWithdrawalPerformed proto.InternalMessageInfo

func (m *EventWithdrawalPerformed) GetWithdrawalOrder() *WithdrawalOrder {
	if m != nil {
		return m.WithdrawalOrder
	}
	return nil
}

type Order struct {
	// @inject_tag: bson:"_id,omitempty"
	BsonId               []byte         `protobuf:"bytes,100,opt,name=bsonId,proto3" json:"bsonId,omitempty" bson:"_id,omitempty"`
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId              string         `protobuf:"bytes,2,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	SellCurrencySymbol   string         `protobuf:"bytes,3,opt,name=sellCurrencySymbol,proto3" json:"sellCurrencySymbol,omitempty"`
	BuyCurrencySymbol    string         `protobuf:"bytes,4,opt,name=buyCurrencySymbol,proto3" json:"buyCurrencySymbol,omitempty"`
	SendingAddress       string         `protobuf:"bytes,5,opt,name=sendingAddress,proto3" json:"sendingAddress,omitempty"`
	ReceiveAddress       string         `protobuf:"bytes,6,opt,name=receiveAddress,proto3" json:"receiveAddress,omitempty"`
	Amount               float64        `protobuf:"fixed64,7,opt,name=amount,proto3" json:"amount,omitempty"`
	Price                float64        `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"`
	Available            float64        `protobuf:"fixed64,9,opt,name=available,proto3" json:"available,omitempty"`
	Commission           *Commission    `protobuf:"bytes,10,opt,name=commission,proto3" json:"commission,omitempty"`
	Contracts            []*Contract    `protobuf:"bytes,11,rep,name=contracts,proto3" json:"contracts,omitempty"`
	Status               *DealStatus    `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt            string         `protobuf:"bytes,14,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	FrontMetaData        *FrontMetaData `protobuf:"bytes,15,opt,name=frontMetaData,proto3" json:"frontMetaData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{9}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetBsonId() []byte {
	if m != nil {
		return m.BsonId
	}
	return nil
}

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *Order) GetSellCurrencySymbol() string {
	if m != nil {
		return m.SellCurrencySymbol
	}
	return ""
}

func (m *Order) GetBuyCurrencySymbol() string {
	if m != nil {
		return m.BuyCurrencySymbol
	}
	return ""
}

func (m *Order) GetSendingAddress() string {
	if m != nil {
		return m.SendingAddress
	}
	return ""
}

func (m *Order) GetReceiveAddress() string {
	if m != nil {
		return m.ReceiveAddress
	}
	return ""
}

func (m *Order) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Order) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Order) GetAvailable() float64 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *Order) GetCommission() *Commission {
	if m != nil {
		return m.Commission
	}
	return nil
}

func (m *Order) GetContracts() []*Contract {
	if m != nil {
		return m.Contracts
	}
	return nil
}

func (m *Order) GetStatus() *DealStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Order) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Order) GetFrontMetaData() *FrontMetaData {
	if m != nil {
		return m.FrontMetaData
	}
	return nil
}

type Contract struct {
	// @inject_tag: bson:"_id,omitempty"
	BsonId               []byte         `protobuf:"bytes,100,opt,name=bsonId,proto3" json:"bsonId,omitempty" bson:"_id,omitempty"`
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId              string         `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	SellerId             string         `protobuf:"bytes,3,opt,name=sellerId,proto3" json:"sellerId,omitempty"`
	BuyerId              string         `protobuf:"bytes,4,opt,name=buyerId,proto3" json:"buyerId,omitempty"`
	SellerSendAddress    string         `protobuf:"bytes,5,opt,name=sellerSendAddress,proto3" json:"sellerSendAddress,omitempty"`
	SellerReceiveAddress string         `protobuf:"bytes,6,opt,name=sellerReceiveAddress,proto3" json:"sellerReceiveAddress,omitempty"`
	BuyerSendAddress     string         `protobuf:"bytes,7,opt,name=buyerSendAddress,proto3" json:"buyerSendAddress,omitempty"`
	BuyerReceiveAddress  string         `protobuf:"bytes,8,opt,name=buyerReceiveAddress,proto3" json:"buyerReceiveAddress,omitempty"`
	Amount               float64        `protobuf:"fixed64,9,opt,name=amount,proto3" json:"amount,omitempty"`
	Cost                 float64        `protobuf:"fixed64,10,opt,name=cost,proto3" json:"cost,omitempty"`
	Available            float64        `protobuf:"fixed64,11,opt,name=available,proto3" json:"available,omitempty"`
	Price                float64        `protobuf:"fixed64,12,opt,name=price,proto3" json:"price,omitempty"`
	SellerCommission     *Commission    `protobuf:"bytes,13,opt,name=sellerCommission,proto3" json:"sellerCommission,omitempty"`
	BuyerCommission      *Commission    `protobuf:"bytes,14,opt,name=buyerCommission,proto3" json:"buyerCommission,omitempty"`
	Status               *DealStatus    `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt            string         `protobuf:"bytes,16,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	FrontMetaData        *FrontMetaData `protobuf:"bytes,17,opt,name=frontMetaData,proto3" json:"frontMetaData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Contract) Reset()         { *m = Contract{} }
func (m *Contract) String() string { return proto.CompactTextString(m) }
func (*Contract) ProtoMessage()    {}
func (*Contract) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{10}
}

func (m *Contract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract.Unmarshal(m, b)
}
func (m *Contract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract.Marshal(b, m, deterministic)
}
func (m *Contract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract.Merge(m, src)
}
func (m *Contract) XXX_Size() int {
	return xxx_messageInfo_Contract.Size(m)
}
func (m *Contract) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract.DiscardUnknown(m)
}

var xxx_messageInfo_Contract proto.InternalMessageInfo

func (m *Contract) GetBsonId() []byte {
	if m != nil {
		return m.BsonId
	}
	return nil
}

func (m *Contract) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Contract) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Contract) GetSellerId() string {
	if m != nil {
		return m.SellerId
	}
	return ""
}

func (m *Contract) GetBuyerId() string {
	if m != nil {
		return m.BuyerId
	}
	return ""
}

func (m *Contract) GetSellerSendAddress() string {
	if m != nil {
		return m.SellerSendAddress
	}
	return ""
}

func (m *Contract) GetSellerReceiveAddress() string {
	if m != nil {
		return m.SellerReceiveAddress
	}
	return ""
}

func (m *Contract) GetBuyerSendAddress() string {
	if m != nil {
		return m.BuyerSendAddress
	}
	return ""
}

func (m *Contract) GetBuyerReceiveAddress() string {
	if m != nil {
		return m.BuyerReceiveAddress
	}
	return ""
}

func (m *Contract) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Contract) GetCost() float64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *Contract) GetAvailable() float64 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *Contract) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Contract) GetSellerCommission() *Commission {
	if m != nil {
		return m.SellerCommission
	}
	return nil
}

func (m *Contract) GetBuyerCommission() *Commission {
	if m != nil {
		return m.BuyerCommission
	}
	return nil
}

func (m *Contract) GetStatus() *DealStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Contract) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Contract) GetFrontMetaData() *FrontMetaData {
	if m != nil {
		return m.FrontMetaData
	}
	return nil
}

type Query_Order struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId              string         `protobuf:"bytes,2,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	SellCurrencySymbol   string         `protobuf:"bytes,3,opt,name=sellCurrencySymbol,proto3" json:"sellCurrencySymbol,omitempty"`
	BuyCurrencySymbol    string         `protobuf:"bytes,4,opt,name=buyCurrencySymbol,proto3" json:"buyCurrencySymbol,omitempty"`
	SendingAddress       string         `protobuf:"bytes,5,opt,name=sendingAddress,proto3" json:"sendingAddress,omitempty"`
	ReceiveAddress       string         `protobuf:"bytes,6,opt,name=receiveAddress,proto3" json:"receiveAddress,omitempty"`
	Amount               float64        `protobuf:"fixed64,7,opt,name=amount,proto3" json:"amount,omitempty"`
	Price                float64        `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"`
	Available            float64        `protobuf:"fixed64,9,opt,name=available,proto3" json:"available,omitempty"`
	Commission           float64        `protobuf:"fixed64,10,opt,name=commission,proto3" json:"commission,omitempty"`
	Active               bool           `protobuf:"varint,11,opt,name=active,proto3" json:"active,omitempty"`
	Status               *DealStatus    `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	FrontMetaData        *FrontMetaData `protobuf:"bytes,13,opt,name=frontMetaData,proto3" json:"frontMetaData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Query_Order) Reset()         { *m = Query_Order{} }
func (m *Query_Order) String() string { return proto.CompactTextString(m) }
func (*Query_Order) ProtoMessage()    {}
func (*Query_Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{11}
}

func (m *Query_Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query_Order.Unmarshal(m, b)
}
func (m *Query_Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query_Order.Marshal(b, m, deterministic)
}
func (m *Query_Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query_Order.Merge(m, src)
}
func (m *Query_Order) XXX_Size() int {
	return xxx_messageInfo_Query_Order.Size(m)
}
func (m *Query_Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Query_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Query_Order proto.InternalMessageInfo

func (m *Query_Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Query_Order) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *Query_Order) GetSellCurrencySymbol() string {
	if m != nil {
		return m.SellCurrencySymbol
	}
	return ""
}

func (m *Query_Order) GetBuyCurrencySymbol() string {
	if m != nil {
		return m.BuyCurrencySymbol
	}
	return ""
}

func (m *Query_Order) GetSendingAddress() string {
	if m != nil {
		return m.SendingAddress
	}
	return ""
}

func (m *Query_Order) GetReceiveAddress() string {
	if m != nil {
		return m.ReceiveAddress
	}
	return ""
}

func (m *Query_Order) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Query_Order) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Query_Order) GetAvailable() float64 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *Query_Order) GetCommission() float64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *Query_Order) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Query_Order) GetStatus() *DealStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Query_Order) GetFrontMetaData() *FrontMetaData {
	if m != nil {
		return m.FrontMetaData
	}
	return nil
}

type Query_CreateContract struct {
	OrderId              string         `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	BuyerId              string         `protobuf:"bytes,2,opt,name=buyerId,proto3" json:"buyerId,omitempty"`
	SendingAddress       string         `protobuf:"bytes,3,opt,name=sendingAddress,proto3" json:"sendingAddress,omitempty"`
	ReceiveAddress       string         `protobuf:"bytes,4,opt,name=receiveAddress,proto3" json:"receiveAddress,omitempty"`
	Amount               float64        `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	BuyerCommission      float64        `protobuf:"fixed64,6,opt,name=buyerCommission,proto3" json:"buyerCommission,omitempty"`
	SellerCommission     float64        `protobuf:"fixed64,7,opt,name=sellerCommission,proto3" json:"sellerCommission,omitempty"`
	FrontMetaData        *FrontMetaData `protobuf:"bytes,8,opt,name=frontMetaData,proto3" json:"frontMetaData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Query_CreateContract) Reset()         { *m = Query_CreateContract{} }
func (m *Query_CreateContract) String() string { return proto.CompactTextString(m) }
func (*Query_CreateContract) ProtoMessage()    {}
func (*Query_CreateContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{12}
}

func (m *Query_CreateContract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query_CreateContract.Unmarshal(m, b)
}
func (m *Query_CreateContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query_CreateContract.Marshal(b, m, deterministic)
}
func (m *Query_CreateContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query_CreateContract.Merge(m, src)
}
func (m *Query_CreateContract) XXX_Size() int {
	return xxx_messageInfo_Query_CreateContract.Size(m)
}
func (m *Query_CreateContract) XXX_DiscardUnknown() {
	xxx_messageInfo_Query_CreateContract.DiscardUnknown(m)
}

var xxx_messageInfo_Query_CreateContract proto.InternalMessageInfo

func (m *Query_CreateContract) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Query_CreateContract) GetBuyerId() string {
	if m != nil {
		return m.BuyerId
	}
	return ""
}

func (m *Query_CreateContract) GetSendingAddress() string {
	if m != nil {
		return m.SendingAddress
	}
	return ""
}

func (m *Query_CreateContract) GetReceiveAddress() string {
	if m != nil {
		return m.ReceiveAddress
	}
	return ""
}

func (m *Query_CreateContract) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Query_CreateContract) GetBuyerCommission() float64 {
	if m != nil {
		return m.BuyerCommission
	}
	return 0
}

func (m *Query_CreateContract) GetSellerCommission() float64 {
	if m != nil {
		return m.SellerCommission
	}
	return 0
}

func (m *Query_CreateContract) GetFrontMetaData() *FrontMetaData {
	if m != nil {
		return m.FrontMetaData
	}
	return nil
}

type Query_Contract struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SellerSendAddress    string      `protobuf:"bytes,2,opt,name=sellerSendAddress,proto3" json:"sellerSendAddress,omitempty"`
	SellerReceiveAddress string      `protobuf:"bytes,3,opt,name=sellerReceiveAddress,proto3" json:"sellerReceiveAddress,omitempty"`
	BuyerSendAddress     string      `protobuf:"bytes,4,opt,name=buyerSendAddress,proto3" json:"buyerSendAddress,omitempty"`
	BuyerReceiveAddress  string      `protobuf:"bytes,5,opt,name=buyerReceiveAddress,proto3" json:"buyerReceiveAddress,omitempty"`
	OrderId              string      `protobuf:"bytes,6,opt,name=orderId,proto3" json:"orderId,omitempty"`
	BuyerId              string      `protobuf:"bytes,7,opt,name=buyerId,proto3" json:"buyerId,omitempty"`
	SellerId             string      `protobuf:"bytes,8,opt,name=sellerId,proto3" json:"sellerId,omitempty"`
	SellCurrencySymbol   string      `protobuf:"bytes,10,opt,name=sellCurrencySymbol,proto3" json:"sellCurrencySymbol,omitempty"`
	BuyCurrencySymbol    string      `protobuf:"bytes,11,opt,name=buyCurrencySymbol,proto3" json:"buyCurrencySymbol,omitempty"`
	UserId               string      `protobuf:"bytes,12,opt,name=userId,proto3" json:"userId,omitempty"`
	Active               bool        `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	Status               *DealStatus `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Query_Contract) Reset()         { *m = Query_Contract{} }
func (m *Query_Contract) String() string { return proto.CompactTextString(m) }
func (*Query_Contract) ProtoMessage()    {}
func (*Query_Contract) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{13}
}

func (m *Query_Contract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query_Contract.Unmarshal(m, b)
}
func (m *Query_Contract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query_Contract.Marshal(b, m, deterministic)
}
func (m *Query_Contract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query_Contract.Merge(m, src)
}
func (m *Query_Contract) XXX_Size() int {
	return xxx_messageInfo_Query_Contract.Size(m)
}
func (m *Query_Contract) XXX_DiscardUnknown() {
	xxx_messageInfo_Query_Contract.DiscardUnknown(m)
}

var xxx_messageInfo_Query_Contract proto.InternalMessageInfo

func (m *Query_Contract) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Query_Contract) GetSellerSendAddress() string {
	if m != nil {
		return m.SellerSendAddress
	}
	return ""
}

func (m *Query_Contract) GetSellerReceiveAddress() string {
	if m != nil {
		return m.SellerReceiveAddress
	}
	return ""
}

func (m *Query_Contract) GetBuyerSendAddress() string {
	if m != nil {
		return m.BuyerSendAddress
	}
	return ""
}

func (m *Query_Contract) GetBuyerReceiveAddress() string {
	if m != nil {
		return m.BuyerReceiveAddress
	}
	return ""
}

func (m *Query_Contract) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Query_Contract) GetBuyerId() string {
	if m != nil {
		return m.BuyerId
	}
	return ""
}

func (m *Query_Contract) GetSellerId() string {
	if m != nil {
		return m.SellerId
	}
	return ""
}

func (m *Query_Contract) GetSellCurrencySymbol() string {
	if m != nil {
		return m.SellCurrencySymbol
	}
	return ""
}

func (m *Query_Contract) GetBuyCurrencySymbol() string {
	if m != nil {
		return m.BuyCurrencySymbol
	}
	return ""
}

func (m *Query_Contract) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Query_Contract) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Query_Contract) GetStatus() *DealStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type Response_Order struct {
	Created              bool        `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Canceled             bool        `protobuf:"varint,2,opt,name=canceled,proto3" json:"canceled,omitempty"`
	Object               *Order      `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	Items                []*Order    `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	ItemsCount           uint32      `protobuf:"varint,5,opt,name=itemsCount,proto3" json:"itemsCount,omitempty"`
	QueryStatus          QueryStatus `protobuf:"varint,6,opt,name=QueryStatus,proto3,enum=structs.QueryStatus" json:"QueryStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Response_Order) Reset()         { *m = Response_Order{} }
func (m *Response_Order) String() string { return proto.CompactTextString(m) }
func (*Response_Order) ProtoMessage()    {}
func (*Response_Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{14}
}

func (m *Response_Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Order.Unmarshal(m, b)
}
func (m *Response_Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Order.Marshal(b, m, deterministic)
}
func (m *Response_Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Order.Merge(m, src)
}
func (m *Response_Order) XXX_Size() int {
	return xxx_messageInfo_Response_Order.Size(m)
}
func (m *Response_Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Order proto.InternalMessageInfo

func (m *Response_Order) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response_Order) GetCanceled() bool {
	if m != nil {
		return m.Canceled
	}
	return false
}

func (m *Response_Order) GetObject() *Order {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *Response_Order) GetItems() []*Order {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Response_Order) GetItemsCount() uint32 {
	if m != nil {
		return m.ItemsCount
	}
	return 0
}

func (m *Response_Order) GetQueryStatus() QueryStatus {
	if m != nil {
		return m.QueryStatus
	}
	return QueryStatus_Query_Missed
}

type Response_Contract struct {
	Created              bool        `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Canceled             bool        `protobuf:"varint,2,opt,name=canceled,proto3" json:"canceled,omitempty"`
	Object               *Contract   `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	Items                []*Contract `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	ItemsCount           uint32      `protobuf:"varint,5,opt,name=itemsCount,proto3" json:"itemsCount,omitempty"`
	QueryStatus          QueryStatus `protobuf:"varint,6,opt,name=QueryStatus,proto3,enum=structs.QueryStatus" json:"QueryStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Response_Contract) Reset()         { *m = Response_Contract{} }
func (m *Response_Contract) String() string { return proto.CompactTextString(m) }
func (*Response_Contract) ProtoMessage()    {}
func (*Response_Contract) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{15}
}

func (m *Response_Contract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Contract.Unmarshal(m, b)
}
func (m *Response_Contract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Contract.Marshal(b, m, deterministic)
}
func (m *Response_Contract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Contract.Merge(m, src)
}
func (m *Response_Contract) XXX_Size() int {
	return xxx_messageInfo_Response_Contract.Size(m)
}
func (m *Response_Contract) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Contract.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Contract proto.InternalMessageInfo

func (m *Response_Contract) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response_Contract) GetCanceled() bool {
	if m != nil {
		return m.Canceled
	}
	return false
}

func (m *Response_Contract) GetObject() *Contract {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *Response_Contract) GetItems() []*Contract {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Response_Contract) GetItemsCount() uint32 {
	if m != nil {
		return m.ItemsCount
	}
	return 0
}

func (m *Response_Contract) GetQueryStatus() QueryStatus {
	if m != nil {
		return m.QueryStatus
	}
	return QueryStatus_Query_Missed
}

type Commission struct {
	Currency             string                 `protobuf:"bytes,1,opt,name=Currency,proto3" json:"Currency,omitempty"`
	SendingAddress       string                 `protobuf:"bytes,2,opt,name=SendingAddress,proto3" json:"SendingAddress,omitempty"`
	ReceiveAddress       string                 `protobuf:"bytes,3,opt,name=ReceiveAddress,proto3" json:"ReceiveAddress,omitempty"`
	Amount               float64                `protobuf:"fixed64,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Remainder            float64                `protobuf:"fixed64,5,opt,name=Remainder,proto3" json:"Remainder,omitempty"`
	Type                 *Commission_TypeStatus `protobuf:"bytes,6,opt,name=Type,proto3" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Commission) Reset()         { *m = Commission{} }
func (m *Commission) String() string { return proto.CompactTextString(m) }
func (*Commission) ProtoMessage()    {}
func (*Commission) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{16}
}

func (m *Commission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commission.Unmarshal(m, b)
}
func (m *Commission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commission.Marshal(b, m, deterministic)
}
func (m *Commission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commission.Merge(m, src)
}
func (m *Commission) XXX_Size() int {
	return xxx_messageInfo_Commission.Size(m)
}
func (m *Commission) XXX_DiscardUnknown() {
	xxx_messageInfo_Commission.DiscardUnknown(m)
}

var xxx_messageInfo_Commission proto.InternalMessageInfo

func (m *Commission) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Commission) GetSendingAddress() string {
	if m != nil {
		return m.SendingAddress
	}
	return ""
}

func (m *Commission) GetReceiveAddress() string {
	if m != nil {
		return m.ReceiveAddress
	}
	return ""
}

func (m *Commission) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Commission) GetRemainder() float64 {
	if m != nil {
		return m.Remainder
	}
	return 0
}

func (m *Commission) GetType() *Commission_TypeStatus {
	if m != nil {
		return m.Type
	}
	return nil
}

type Commission_TypeStatus struct {
	Status               Commission_TypeStatus__ET `protobuf:"varint,1,opt,name=Status,proto3,enum=structs.Commission_TypeStatus__ET" json:"Status,omitempty"`
	OrderId              string                    `protobuf:"bytes,2,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	ContractId           string                    `protobuf:"bytes,3,opt,name=ContractId,proto3" json:"ContractId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Commission_TypeStatus) Reset()         { *m = Commission_TypeStatus{} }
func (m *Commission_TypeStatus) String() string { return proto.CompactTextString(m) }
func (*Commission_TypeStatus) ProtoMessage()    {}
func (*Commission_TypeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{16, 0}
}

func (m *Commission_TypeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commission_TypeStatus.Unmarshal(m, b)
}
func (m *Commission_TypeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commission_TypeStatus.Marshal(b, m, deterministic)
}
func (m *Commission_TypeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commission_TypeStatus.Merge(m, src)
}
func (m *Commission_TypeStatus) XXX_Size() int {
	return xxx_messageInfo_Commission_TypeStatus.Size(m)
}
func (m *Commission_TypeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_Commission_TypeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_Commission_TypeStatus proto.InternalMessageInfo

func (m *Commission_TypeStatus) GetStatus() Commission_TypeStatus__ET {
	if m != nil {
		return m.Status
	}
	return Commission_TypeStatus_UNDEFINED
}

func (m *Commission_TypeStatus) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Commission_TypeStatus) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

type Query_CalculateCommission struct {
	User                 *User     `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Order                *Order    `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	Contract             *Contract `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Query_CalculateCommission) Reset()         { *m = Query_CalculateCommission{} }
func (m *Query_CalculateCommission) String() string { return proto.CompactTextString(m) }
func (*Query_CalculateCommission) ProtoMessage()    {}
func (*Query_CalculateCommission) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{17}
}

func (m *Query_CalculateCommission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query_CalculateCommission.Unmarshal(m, b)
}
func (m *Query_CalculateCommission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query_CalculateCommission.Marshal(b, m, deterministic)
}
func (m *Query_CalculateCommission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query_CalculateCommission.Merge(m, src)
}
func (m *Query_CalculateCommission) XXX_Size() int {
	return xxx_messageInfo_Query_CalculateCommission.Size(m)
}
func (m *Query_CalculateCommission) XXX_DiscardUnknown() {
	xxx_messageInfo_Query_CalculateCommission.DiscardUnknown(m)
}

var xxx_messageInfo_Query_CalculateCommission proto.InternalMessageInfo

func (m *Query_CalculateCommission) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Query_CalculateCommission) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *Query_CalculateCommission) GetContract() *Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

type WithdrawalOrder struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId              string               `protobuf:"bytes,2,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	SendingAddress       string               `protobuf:"bytes,3,opt,name=sendingAddress,proto3" json:"sendingAddress,omitempty"`
	PaymentSystem        string               `protobuf:"bytes,4,opt,name=paymentSystem,proto3" json:"paymentSystem,omitempty"`
	Amount               float64              `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Attributes           []*KeyValueAttribute `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Status               *DealStatus          `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	RelatedTxId          string               `protobuf:"bytes,8,opt,name=relatedTxId,proto3" json:"relatedTxId,omitempty"`
	CreatedAt            string               `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WithdrawalOrder) Reset()         { *m = WithdrawalOrder{} }
func (m *WithdrawalOrder) String() string { return proto.CompactTextString(m) }
func (*WithdrawalOrder) ProtoMessage()    {}
func (*WithdrawalOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{18}
}

func (m *WithdrawalOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawalOrder.Unmarshal(m, b)
}
func (m *WithdrawalOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawalOrder.Marshal(b, m, deterministic)
}
func (m *WithdrawalOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawalOrder.Merge(m, src)
}
func (m *WithdrawalOrder) XXX_Size() int {
	return xxx_messageInfo_WithdrawalOrder.Size(m)
}
func (m *WithdrawalOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawalOrder.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawalOrder proto.InternalMessageInfo

func (m *WithdrawalOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *WithdrawalOrder) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *WithdrawalOrder) GetSendingAddress() string {
	if m != nil {
		return m.SendingAddress
	}
	return ""
}

func (m *WithdrawalOrder) GetPaymentSystem() string {
	if m != nil {
		return m.PaymentSystem
	}
	return ""
}

func (m *WithdrawalOrder) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *WithdrawalOrder) GetAttributes() []*KeyValueAttribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *WithdrawalOrder) GetStatus() *DealStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *WithdrawalOrder) GetRelatedTxId() string {
	if m != nil {
		return m.RelatedTxId
	}
	return ""
}

func (m *WithdrawalOrder) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type Query_Withdrawal struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId              string               `protobuf:"bytes,2,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	SendingAddress       string               `protobuf:"bytes,3,opt,name=sendingAddress,proto3" json:"sendingAddress,omitempty"`
	PaymentSystem        string               `protobuf:"bytes,4,opt,name=paymentSystem,proto3" json:"paymentSystem,omitempty"`
	Amount               float64              `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Attributes           []*KeyValueAttribute `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Status               *DealStatus          `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	RelatedTxId          string               `protobuf:"bytes,8,opt,name=relatedTxId,proto3" json:"relatedTxId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Query_Withdrawal) Reset()         { *m = Query_Withdrawal{} }
func (m *Query_Withdrawal) String() string { return proto.CompactTextString(m) }
func (*Query_Withdrawal) ProtoMessage()    {}
func (*Query_Withdrawal) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{19}
}

func (m *Query_Withdrawal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query_Withdrawal.Unmarshal(m, b)
}
func (m *Query_Withdrawal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query_Withdrawal.Marshal(b, m, deterministic)
}
func (m *Query_Withdrawal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query_Withdrawal.Merge(m, src)
}
func (m *Query_Withdrawal) XXX_Size() int {
	return xxx_messageInfo_Query_Withdrawal.Size(m)
}
func (m *Query_Withdrawal) XXX_DiscardUnknown() {
	xxx_messageInfo_Query_Withdrawal.DiscardUnknown(m)
}

var xxx_messageInfo_Query_Withdrawal proto.InternalMessageInfo

func (m *Query_Withdrawal) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Query_Withdrawal) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *Query_Withdrawal) GetSendingAddress() string {
	if m != nil {
		return m.SendingAddress
	}
	return ""
}

func (m *Query_Withdrawal) GetPaymentSystem() string {
	if m != nil {
		return m.PaymentSystem
	}
	return ""
}

func (m *Query_Withdrawal) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Query_Withdrawal) GetAttributes() []*KeyValueAttribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Query_Withdrawal) GetStatus() *DealStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Query_Withdrawal) GetRelatedTxId() string {
	if m != nil {
		return m.RelatedTxId
	}
	return ""
}

type Response_Withdrawal struct {
	Object               *WithdrawalOrder   `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Items                []*WithdrawalOrder `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Response_Withdrawal) Reset()         { *m = Response_Withdrawal{} }
func (m *Response_Withdrawal) String() string { return proto.CompactTextString(m) }
func (*Response_Withdrawal) ProtoMessage()    {}
func (*Response_Withdrawal) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{20}
}

func (m *Response_Withdrawal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Withdrawal.Unmarshal(m, b)
}
func (m *Response_Withdrawal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Withdrawal.Marshal(b, m, deterministic)
}
func (m *Response_Withdrawal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Withdrawal.Merge(m, src)
}
func (m *Response_Withdrawal) XXX_Size() int {
	return xxx_messageInfo_Response_Withdrawal.Size(m)
}
func (m *Response_Withdrawal) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Withdrawal.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Withdrawal proto.InternalMessageInfo

func (m *Response_Withdrawal) GetObject() *WithdrawalOrder {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *Response_Withdrawal) GetItems() []*WithdrawalOrder {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterEnum("structs.Commission_TypeStatus__ET", Commission_TypeStatus__ET_name, Commission_TypeStatus__ET_value)
	proto.RegisterType((*EventNewOrder)(nil), "structs.EventNewOrder")
	proto.RegisterType((*EventNewContract)(nil), "structs.EventNewContract")
	proto.RegisterType((*EventOrderChange)(nil), "structs.EventOrderChange")
	proto.RegisterType((*EventOrderPerformed)(nil), "structs.EventOrderPerformed")
	proto.RegisterType((*EventContractChange)(nil), "structs.EventContractChange")
	proto.RegisterType((*EventContractPerformed)(nil), "structs.EventContractPerformed")
	proto.RegisterType((*EventOrderCanceled)(nil), "structs.EventOrderCanceled")
	proto.RegisterType((*EventNewWithdrawal)(nil), "structs.EventNewWithdrawal")
	proto.RegisterType((*EventWithdrawalPerformed)(nil), "structs.EventWithdrawalPerformed")
	proto.RegisterType((*Order)(nil), "structs.Order")
	proto.RegisterType((*Contract)(nil), "structs.Contract")
	proto.RegisterType((*Query_Order)(nil), "structs.Query_Order")
	proto.RegisterType((*Query_CreateContract)(nil), "structs.Query_CreateContract")
	proto.RegisterType((*Query_Contract)(nil), "structs.Query_Contract")
	proto.RegisterType((*Response_Order)(nil), "structs.Response_Order")
	proto.RegisterType((*Response_Contract)(nil), "structs.Response_Contract")
	proto.RegisterType((*Commission)(nil), "structs.Commission")
	proto.RegisterType((*Commission_TypeStatus)(nil), "structs.Commission.TypeStatus")
	proto.RegisterType((*Query_CalculateCommission)(nil), "structs.Query_CalculateCommission")
	proto.RegisterType((*WithdrawalOrder)(nil), "structs.WithdrawalOrder")
	proto.RegisterType((*Query_Withdrawal)(nil), "structs.Query_Withdrawal")
	proto.RegisterType((*Response_Withdrawal)(nil), "structs.Response_Withdrawal")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceOrderClient is the client API for ServiceOrder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceOrderClient interface {
	CreateOrder(ctx context.Context, in *Query_Order, opts ...grpc.CallOption) (*Response_Order, error)
	GetOrder(ctx context.Context, in *Query_Order, opts ...grpc.CallOption) (*Response_Order, error)
	GetOrders(ctx context.Context, in *Query_Order, opts ...grpc.CallOption) (*Response_Order, error)
	CancelOrder(ctx context.Context, in *Query_Order, opts ...grpc.CallOption) (*Response_Order, error)
	CreateContract(ctx context.Context, in *Query_CreateContract, opts ...grpc.CallOption) (*Response_Contract, error)
	GetContract(ctx context.Context, in *Query_Contract, opts ...grpc.CallOption) (*Response_Contract, error)
	GetContracts(ctx context.Context, in *Query_Contract, opts ...grpc.CallOption) (*Response_Contract, error)
	IsSellerContractTx(ctx context.Context, in *Tx, opts ...grpc.CallOption) (*Contract, error)
	IsBuyerContractTx(ctx context.Context, in *Tx, opts ...grpc.CallOption) (*Contract, error)
	CreateWithdrawal(ctx context.Context, in *Query_Withdrawal, opts ...grpc.CallOption) (*WithdrawalOrder, error)
	GetWithdrawalOrders(ctx context.Context, in *Query_Withdrawal, opts ...grpc.CallOption) (*Response_Withdrawal, error)
	PerformWithdrawal(ctx context.Context, in *Query_Withdrawal, opts ...grpc.CallOption) (*WithdrawalOrder, error)
	CancelWithdrawal(ctx context.Context, in *Query_Withdrawal, opts ...grpc.CallOption) (*WithdrawalOrder, error)
}

type serviceOrderClient struct {
	cc *grpc.ClientConn
}

func NewServiceOrderClient(cc *grpc.ClientConn) ServiceOrderClient {
	return &serviceOrderClient{cc}
}

func (c *serviceOrderClient) CreateOrder(ctx context.Context, in *Query_Order, opts ...grpc.CallOption) (*Response_Order, error) {
	out := new(Response_Order)
	err := c.cc.Invoke(ctx, "/structs.ServiceOrder/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceOrderClient) GetOrder(ctx context.Context, in *Query_Order, opts ...grpc.CallOption) (*Response_Order, error) {
	out := new(Response_Order)
	err := c.cc.Invoke(ctx, "/structs.ServiceOrder/GetOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceOrderClient) GetOrders(ctx context.Context, in *Query_Order, opts ...grpc.CallOption) (*Response_Order, error) {
	out := new(Response_Order)
	err := c.cc.Invoke(ctx, "/structs.ServiceOrder/GetOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceOrderClient) CancelOrder(ctx context.Context, in *Query_Order, opts ...grpc.CallOption) (*Response_Order, error) {
	out := new(Response_Order)
	err := c.cc.Invoke(ctx, "/structs.ServiceOrder/CancelOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceOrderClient) CreateContract(ctx context.Context, in *Query_CreateContract, opts ...grpc.CallOption) (*Response_Contract, error) {
	out := new(Response_Contract)
	err := c.cc.Invoke(ctx, "/structs.ServiceOrder/CreateContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceOrderClient) GetContract(ctx context.Context, in *Query_Contract, opts ...grpc.CallOption) (*Response_Contract, error) {
	out := new(Response_Contract)
	err := c.cc.Invoke(ctx, "/structs.ServiceOrder/GetContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceOrderClient) GetContracts(ctx context.Context, in *Query_Contract, opts ...grpc.CallOption) (*Response_Contract, error) {
	out := new(Response_Contract)
	err := c.cc.Invoke(ctx, "/structs.ServiceOrder/GetContracts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceOrderClient) IsSellerContractTx(ctx context.Context, in *Tx, opts ...grpc.CallOption) (*Contract, error) {
	out := new(Contract)
	err := c.cc.Invoke(ctx, "/structs.ServiceOrder/IsSellerContractTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceOrderClient) IsBuyerContractTx(ctx context.Context, in *Tx, opts ...grpc.CallOption) (*Contract, error) {
	out := new(Contract)
	err := c.cc.Invoke(ctx, "/structs.ServiceOrder/IsBuyerContractTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceOrderClient) CreateWithdrawal(ctx context.Context, in *Query_Withdrawal, opts ...grpc.CallOption) (*WithdrawalOrder, error) {
	out := new(WithdrawalOrder)
	err := c.cc.Invoke(ctx, "/structs.ServiceOrder/CreateWithdrawal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceOrderClient) GetWithdrawalOrders(ctx context.Context, in *Query_Withdrawal, opts ...grpc.CallOption) (*Response_Withdrawal, error) {
	out := new(Response_Withdrawal)
	err := c.cc.Invoke(ctx, "/structs.ServiceOrder/GetWithdrawalOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceOrderClient) PerformWithdrawal(ctx context.Context, in *Query_Withdrawal, opts ...grpc.CallOption) (*WithdrawalOrder, error) {
	out := new(WithdrawalOrder)
	err := c.cc.Invoke(ctx, "/structs.ServiceOrder/PerformWithdrawal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceOrderClient) CancelWithdrawal(ctx context.Context, in *Query_Withdrawal, opts ...grpc.CallOption) (*WithdrawalOrder, error) {
	out := new(WithdrawalOrder)
	err := c.cc.Invoke(ctx, "/structs.ServiceOrder/CancelWithdrawal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceOrderServer is the server API for ServiceOrder service.
type ServiceOrderServer interface {
	CreateOrder(context.Context, *Query_Order) (*Response_Order, error)
	GetOrder(context.Context, *Query_Order) (*Response_Order, error)
	GetOrders(context.Context, *Query_Order) (*Response_Order, error)
	CancelOrder(context.Context, *Query_Order) (*Response_Order, error)
	CreateContract(context.Context, *Query_CreateContract) (*Response_Contract, error)
	GetContract(context.Context, *Query_Contract) (*Response_Contract, error)
	GetContracts(context.Context, *Query_Contract) (*Response_Contract, error)
	IsSellerContractTx(context.Context, *Tx) (*Contract, error)
	IsBuyerContractTx(context.Context, *Tx) (*Contract, error)
	CreateWithdrawal(context.Context, *Query_Withdrawal) (*WithdrawalOrder, error)
	GetWithdrawalOrders(context.Context, *Query_Withdrawal) (*Response_Withdrawal, error)
	PerformWithdrawal(context.Context, *Query_Withdrawal) (*WithdrawalOrder, error)
	CancelWithdrawal(context.Context, *Query_Withdrawal) (*WithdrawalOrder, error)
}

func RegisterServiceOrderServer(s *grpc.Server, srv ServiceOrderServer) {
	s.RegisterService(&_ServiceOrder_serviceDesc, srv)
}

func _ServiceOrder_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOrderServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceOrder/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOrderServer).CreateOrder(ctx, req.(*Query_Order))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceOrder_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOrderServer).GetOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceOrder/GetOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOrderServer).GetOrder(ctx, req.(*Query_Order))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceOrder_GetOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOrderServer).GetOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceOrder/GetOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOrderServer).GetOrders(ctx, req.(*Query_Order))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceOrder_CancelOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOrderServer).CancelOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceOrder/CancelOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOrderServer).CancelOrder(ctx, req.(*Query_Order))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceOrder_CreateContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_CreateContract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOrderServer).CreateContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceOrder/CreateContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOrderServer).CreateContract(ctx, req.(*Query_CreateContract))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceOrder_GetContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_Contract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOrderServer).GetContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceOrder/GetContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOrderServer).GetContract(ctx, req.(*Query_Contract))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceOrder_GetContracts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_Contract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOrderServer).GetContracts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceOrder/GetContracts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOrderServer).GetContracts(ctx, req.(*Query_Contract))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceOrder_IsSellerContractTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tx)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOrderServer).IsSellerContractTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceOrder/IsSellerContractTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOrderServer).IsSellerContractTx(ctx, req.(*Tx))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceOrder_IsBuyerContractTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tx)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOrderServer).IsBuyerContractTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceOrder/IsBuyerContractTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOrderServer).IsBuyerContractTx(ctx, req.(*Tx))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceOrder_CreateWithdrawal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_Withdrawal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOrderServer).CreateWithdrawal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceOrder/CreateWithdrawal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOrderServer).CreateWithdrawal(ctx, req.(*Query_Withdrawal))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceOrder_GetWithdrawalOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_Withdrawal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOrderServer).GetWithdrawalOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceOrder/GetWithdrawalOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOrderServer).GetWithdrawalOrders(ctx, req.(*Query_Withdrawal))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceOrder_PerformWithdrawal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_Withdrawal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOrderServer).PerformWithdrawal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceOrder/PerformWithdrawal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOrderServer).PerformWithdrawal(ctx, req.(*Query_Withdrawal))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceOrder_CancelWithdrawal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_Withdrawal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOrderServer).CancelWithdrawal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceOrder/CancelWithdrawal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOrderServer).CancelWithdrawal(ctx, req.(*Query_Withdrawal))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceOrder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "structs.ServiceOrder",
	HandlerType: (*ServiceOrderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrder",
			Handler:    _ServiceOrder_CreateOrder_Handler,
		},
		{
			MethodName: "GetOrder",
			Handler:    _ServiceOrder_GetOrder_Handler,
		},
		{
			MethodName: "GetOrders",
			Handler:    _ServiceOrder_GetOrders_Handler,
		},
		{
			MethodName: "CancelOrder",
			Handler:    _ServiceOrder_CancelOrder_Handler,
		},
		{
			MethodName: "CreateContract",
			Handler:    _ServiceOrder_CreateContract_Handler,
		},
		{
			MethodName: "GetContract",
			Handler:    _ServiceOrder_GetContract_Handler,
		},
		{
			MethodName: "GetContracts",
			Handler:    _ServiceOrder_GetContracts_Handler,
		},
		{
			MethodName: "IsSellerContractTx",
			Handler:    _ServiceOrder_IsSellerContractTx_Handler,
		},
		{
			MethodName: "IsBuyerContractTx",
			Handler:    _ServiceOrder_IsBuyerContractTx_Handler,
		},
		{
			MethodName: "CreateWithdrawal",
			Handler:    _ServiceOrder_CreateWithdrawal_Handler,
		},
		{
			MethodName: "GetWithdrawalOrders",
			Handler:    _ServiceOrder_GetWithdrawalOrders_Handler,
		},
		{
			MethodName: "PerformWithdrawal",
			Handler:    _ServiceOrder_PerformWithdrawal_Handler,
		},
		{
			MethodName: "CancelWithdrawal",
			Handler:    _ServiceOrder_CancelWithdrawal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order.proto",
}

// ServiceCommissionClient is the client API for ServiceCommission service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceCommissionClient interface {
	//
	Calc(ctx context.Context, in *Query_CalculateCommission, opts ...grpc.CallOption) (*Commission, error)
	Init(ctx context.Context, in *Query_CalculateCommission, opts ...grpc.CallOption) (*Commission, error)
}

type serviceCommissionClient struct {
	cc *grpc.ClientConn
}

func NewServiceCommissionClient(cc *grpc.ClientConn) ServiceCommissionClient {
	return &serviceCommissionClient{cc}
}

func (c *serviceCommissionClient) Calc(ctx context.Context, in *Query_CalculateCommission, opts ...grpc.CallOption) (*Commission, error) {
	out := new(Commission)
	err := c.cc.Invoke(ctx, "/structs.ServiceCommission/Calc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceCommissionClient) Init(ctx context.Context, in *Query_CalculateCommission, opts ...grpc.CallOption) (*Commission, error) {
	out := new(Commission)
	err := c.cc.Invoke(ctx, "/structs.ServiceCommission/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceCommissionServer is the server API for ServiceCommission service.
type ServiceCommissionServer interface {
	//
	Calc(context.Context, *Query_CalculateCommission) (*Commission, error)
	Init(context.Context, *Query_CalculateCommission) (*Commission, error)
}

func RegisterServiceCommissionServer(s *grpc.Server, srv ServiceCommissionServer) {
	s.RegisterService(&_ServiceCommission_serviceDesc, srv)
}

func _ServiceCommission_Calc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_CalculateCommission)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceCommissionServer).Calc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceCommission/Calc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceCommissionServer).Calc(ctx, req.(*Query_CalculateCommission))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceCommission_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_CalculateCommission)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceCommissionServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceCommission/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceCommissionServer).Init(ctx, req.(*Query_CalculateCommission))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceCommission_serviceDesc = grpc.ServiceDesc{
	ServiceName: "structs.ServiceCommission",
	HandlerType: (*ServiceCommissionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Calc",
			Handler:    _ServiceCommission_Calc_Handler,
		},
		{
			MethodName: "Init",
			Handler:    _ServiceCommission_Init_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order.proto",
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077) }

var fileDescriptor_cd01338c35d87077 = []byte{
	// 1620 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0xcd, 0x72, 0xdb, 0xd4,
	0x17, 0x8f, 0xfc, 0x15, 0xfb, 0x38, 0x76, 0xec, 0x9b, 0x4c, 0xaa, 0xba, 0x69, 0x27, 0xd5, 0xbf,
	0xd3, 0x7f, 0x28, 0x90, 0x94, 0x74, 0xda, 0x61, 0xd2, 0x32, 0x4c, 0x9a, 0xb8, 0x21, 0xd0, 0x26,
	0x45, 0x76, 0x29, 0x30, 0x0c, 0x19, 0x59, 0xba, 0x4d, 0xd5, 0xb1, 0xa5, 0x8c, 0x74, 0x9d, 0xd4,
	0xc3, 0xb0, 0x61, 0xc1, 0x0b, 0x74, 0xc5, 0x33, 0x30, 0x2c, 0xe0, 0x21, 0x58, 0x30, 0xec, 0xe0,
	0x11, 0xd8, 0xc1, 0x96, 0x3d, 0x73, 0x3f, 0x24, 0x5d, 0x49, 0x76, 0x13, 0xa5, 0xb0, 0xeb, 0xce,
	0xf7, 0x7c, 0x5d, 0x9d, 0x7b, 0x7e, 0xe7, 0x77, 0x8f, 0x64, 0xa8, 0xba, 0x9e, 0x85, 0xbd, 0x95,
	0x43, 0xcf, 0x25, 0x2e, 0x9a, 0xf6, 0x89, 0x37, 0x34, 0x89, 0xdf, 0x9a, 0x31, 0xdd, 0xc1, 0xc0,
	0x75, 0xb8, 0xb8, 0x05, 0x43, 0x3f, 0x30, 0x69, 0x35, 0x89, 0x67, 0x38, 0xbe, 0x61, 0x12, 0x3b,
	0x54, 0x2f, 0x1e, 0xb8, 0xee, 0x41, 0x1f, 0xaf, 0x1a, 0x87, 0xf6, 0xaa, 0xe1, 0x38, 0x2e, 0x31,
	0xa8, 0xd2, 0xe7, 0x5a, 0xed, 0x26, 0xd4, 0xda, 0x47, 0xd8, 0x21, 0xbb, 0xf8, 0x78, 0x8f, 0x6e,
	0x85, 0xae, 0x40, 0x91, 0xed, 0xa9, 0x2a, 0x4b, 0xca, 0x72, 0x75, 0xad, 0xbe, 0x22, 0x36, 0x5d,
	0x61, 0x6a, 0x9d, 0x2b, 0xb5, 0x0d, 0x68, 0x04, 0x6e, 0x9b, 0xae, 0x43, 0x3c, 0xc3, 0x24, 0xe8,
	0x6d, 0x28, 0x9b, 0xe2, 0xb7, 0x70, 0x6e, 0x86, 0xce, 0x81, 0x91, 0x1e, 0x9a, 0x68, 0xef, 0x8a,
	0x10, 0x2c, 0xee, 0xe6, 0x53, 0xc3, 0x39, 0xc0, 0xa7, 0xdc, 0xfc, 0x36, 0xcc, 0x45, 0x9e, 0x0f,
	0xb1, 0xf7, 0xc4, 0xf5, 0x06, 0xd8, 0x3a, 0xa5, 0xf3, 0x96, 0x70, 0x0e, 0x9e, 0x48, 0xec, 0x9c,
	0xf1, 0xe1, 0xb7, 0x61, 0x21, 0x16, 0x25, 0x7a, 0x8a, 0x8c, 0x81, 0xd6, 0x01, 0x49, 0xa7, 0x60,
	0x38, 0x26, 0xee, 0x9f, 0x3a, 0x95, 0x4f, 0x85, 0xef, 0x2e, 0x3e, 0x7e, 0x6c, 0x93, 0xa7, 0x96,
	0x67, 0x1c, 0x1b, 0x7d, 0x74, 0x17, 0x66, 0x8f, 0xc3, 0xd5, 0x9e, 0x14, 0x45, 0x0d, 0xa3, 0x3c,
	0x8e, 0xeb, 0xf5, 0xa4, 0x83, 0xf6, 0x25, 0xa8, 0x2c, 0x72, 0x64, 0x18, 0x25, 0xf8, 0x6f, 0xc4,
	0xff, 0xa9, 0x00, 0x45, 0x0e, 0xb7, 0x05, 0x28, 0xf5, 0x7c, 0xd7, 0xd9, 0xb1, 0x54, 0x6b, 0x49,
	0x59, 0x9e, 0xd1, 0xc5, 0x0a, 0xd5, 0x21, 0x67, 0x5b, 0x2c, 0x70, 0x45, 0xcf, 0xd9, 0x16, 0x52,
	0x61, 0xda, 0x3d, 0x76, 0xb0, 0xb7, 0x63, 0xa9, 0x39, 0x26, 0x0c, 0x96, 0x68, 0x05, 0x90, 0x8f,
	0xfb, 0xfd, 0xcd, 0xa1, 0xe7, 0x61, 0xc7, 0x1c, 0x75, 0x46, 0x83, 0x9e, 0xdb, 0x57, 0xf3, 0xcc,
	0x68, 0x8c, 0x06, 0xbd, 0x05, 0xcd, 0xde, 0x70, 0x94, 0x30, 0x2f, 0x30, 0xf3, 0xb4, 0x02, 0x5d,
	0x85, 0xba, 0x8f, 0x1d, 0xcb, 0x76, 0x0e, 0x36, 0x2c, 0xcb, 0xc3, 0xbe, 0xaf, 0x16, 0x99, 0x69,
	0x42, 0x4a, 0xed, 0x3c, 0x6c, 0x62, 0xfb, 0x08, 0x07, 0x76, 0x25, 0x6e, 0x17, 0x97, 0xd2, 0x7c,
	0x8d, 0x81, 0x3b, 0x74, 0x88, 0x3a, 0xbd, 0xa4, 0x2c, 0x2b, 0xba, 0x58, 0xa1, 0x79, 0x28, 0x1e,
	0x7a, 0xb6, 0x89, 0xd5, 0x32, 0x13, 0xf3, 0x05, 0x5a, 0x84, 0x8a, 0x71, 0x64, 0xd8, 0x7d, 0xa3,
	0xd7, 0xc7, 0x6a, 0x85, 0x69, 0x22, 0x01, 0xba, 0x01, 0x40, 0x89, 0xc0, 0xf6, 0x7d, 0xdb, 0x75,
	0x54, 0x60, 0x45, 0x98, 0x93, 0xc0, 0x16, 0xa8, 0x74, 0xc9, 0x0c, 0xad, 0x42, 0x25, 0x00, 0x9f,
	0xaf, 0x56, 0x97, 0xf2, 0xe3, 0x01, 0x1a, 0xd9, 0xa0, 0x37, 0xa1, 0xe4, 0x13, 0x83, 0x0c, 0x7d,
	0x75, 0x26, 0xb1, 0xc3, 0x16, 0x36, 0xfa, 0x1d, 0xa6, 0xd2, 0x85, 0x09, 0x7d, 0x60, 0xd3, 0xc3,
	0x06, 0xc1, 0xd6, 0x06, 0x51, 0xeb, 0xec, 0x04, 0x22, 0x01, 0xba, 0x03, 0xb5, 0x27, 0x9e, 0xeb,
	0x90, 0x07, 0x98, 0x18, 0x5b, 0x06, 0x31, 0xd4, 0x59, 0x16, 0x71, 0x21, 0x8c, 0x78, 0x4f, 0xd6,
	0xea, 0x71, 0x63, 0xed, 0xfb, 0x22, 0x94, 0x43, 0xb2, 0xc9, 0x82, 0x1b, 0x0a, 0x34, 0x09, 0x37,
	0x7c, 0x89, 0x5a, 0x50, 0xa6, 0xe8, 0x60, 0x2a, 0x8e, 0x96, 0x70, 0x4d, 0xbd, 0x7a, 0xc3, 0x11,
	0x53, 0x71, 0x64, 0x04, 0x4b, 0x8a, 0x1e, 0x6e, 0xd5, 0xc1, 0x8e, 0x15, 0x87, 0x44, 0x5a, 0x81,
	0xd6, 0x60, 0x9e, 0x0b, 0xf5, 0x71, 0xd8, 0x18, 0xab, 0x43, 0xd7, 0xa0, 0xc1, 0x36, 0x93, 0x37,
	0x98, 0x66, 0xf6, 0x29, 0x39, 0xba, 0x0e, 0x73, 0x4c, 0x96, 0x08, 0x5f, 0x66, 0xe6, 0xe3, 0x54,
	0x12, 0xfe, 0x2a, 0x31, 0xfc, 0x21, 0x28, 0x98, 0xae, 0x4f, 0x18, 0x8a, 0x14, 0x9d, 0xfd, 0x8e,
	0xa3, 0xaf, 0x9a, 0x44, 0x5f, 0x88, 0xd8, 0x19, 0x19, 0xb1, 0xef, 0x43, 0x83, 0x67, 0x15, 0xc1,
	0x4f, 0xad, 0x4d, 0x46, 0x66, 0xca, 0x18, 0xbd, 0x07, 0xb3, 0xec, 0xb9, 0x25, 0xff, 0xfa, 0x64,
	0xff, 0xa4, 0xad, 0x84, 0xd6, 0xd9, 0x8c, 0x68, 0x6d, 0x9c, 0x88, 0xd6, 0x66, 0x16, 0xb4, 0xfe,
	0x9e, 0x87, 0xea, 0xc7, 0x43, 0xec, 0x8d, 0xf6, 0x39, 0xd1, 0xbd, 0x26, 0xb4, 0x93, 0x09, 0xed,
	0x52, 0x8a, 0xd0, 0x94, 0x18, 0x77, 0xd1, 0xbd, 0x4c, 0x62, 0x1f, 0x71, 0x34, 0x96, 0x75, 0xb1,
	0xca, 0x46, 0x51, 0xa9, 0xb2, 0xd6, 0xb2, 0x94, 0xf5, 0xe7, 0x1c, 0xcc, 0xf3, 0xb2, 0x6e, 0x32,
	0xa0, 0x84, 0x84, 0x24, 0x11, 0x8d, 0x12, 0x27, 0x1a, 0x89, 0x4c, 0x72, 0x71, 0x32, 0x49, 0xd7,
	0x22, 0x7f, 0xca, 0x5a, 0x14, 0x4e, 0xa8, 0x45, 0x31, 0x56, 0x8b, 0xe5, 0x74, 0x4f, 0x95, 0x98,
	0x41, 0xaa, 0x7d, 0xae, 0x8d, 0x69, 0x5f, 0x5e, 0xd7, 0x74, 0xa7, 0xa6, 0x0e, 0xb2, 0x9c, 0xe5,
	0x20, 0xff, 0xcc, 0x43, 0x5d, 0x1c, 0x64, 0x70, 0x84, 0xc9, 0x16, 0x19, 0xcb, 0xb5, 0xb9, 0xac,
	0x5c, 0x9b, 0xcf, 0xc8, 0xb5, 0x85, 0x6c, 0x5c, 0x5b, 0x9c, 0xcc, 0xb5, 0x12, 0x24, 0x4a, 0x13,
	0x21, 0x31, 0x1d, 0x87, 0x84, 0x7c, 0x2b, 0x95, 0x13, 0xb7, 0xd2, 0x78, 0x62, 0x80, 0x6c, 0xc4,
	0x50, 0x9d, 0x44, 0x0c, 0x0b, 0x50, 0xa2, 0x2f, 0x12, 0x3b, 0x16, 0x6b, 0xa2, 0x8a, 0x2e, 0x56,
	0x52, 0xd3, 0xd5, 0x26, 0x34, 0x5d, 0xfd, 0xc4, 0xa6, 0xd3, 0xfe, 0x52, 0xa0, 0xae, 0x63, 0xff,
	0xd0, 0x75, 0x7c, 0x2c, 0x08, 0x51, 0x85, 0x69, 0xc1, 0xb5, 0xac, 0xe4, 0x65, 0x3d, 0x58, 0xd2,
	0x33, 0x30, 0xc5, 0x24, 0xcc, 0xca, 0x5d, 0xd6, 0xc3, 0x35, 0xba, 0x0a, 0x25, 0xb7, 0xf7, 0x0c,
	0x9b, 0x84, 0xd5, 0x35, 0x3d, 0x1a, 0x0b, 0x2d, 0x9d, 0xa0, 0x6d, 0x82, 0x07, 0xb4, 0x9c, 0xf9,
	0x71, 0x13, 0x34, 0x53, 0x52, 0xc2, 0x61, 0x3f, 0x36, 0xc3, 0xa6, 0xa9, 0xe9, 0x92, 0x04, 0xdd,
	0x12, 0x1c, 0xce, 0xb3, 0x61, 0x55, 0xac, 0xaf, 0xcd, 0x87, 0xb1, 0x24, 0x9d, 0x2e, 0x1b, 0x6a,
	0x7f, 0x2b, 0xd0, 0x0c, 0xd3, 0x95, 0x29, 0xe2, 0x0c, 0x19, 0xbf, 0x91, 0xc8, 0x78, 0xcc, 0xb4,
	0x16, 0x24, 0xfd, 0xff, 0x78, 0xd2, 0x63, 0x2c, 0xff, 0xe3, 0xbc, 0x7f, 0xcc, 0x03, 0x48, 0x0c,
	0xd1, 0x82, 0x72, 0x00, 0x32, 0xd1, 0xd6, 0xe1, 0x9a, 0x72, 0x5a, 0x27, 0xce, 0x7d, 0xbc, 0xb3,
	0x13, 0x52, 0x6a, 0x37, 0xb6, 0xa1, 0xeb, 0xe9, 0xc1, 0x66, 0x83, 0x73, 0x5f, 0x81, 0x73, 0x1f,
	0x5f, 0xd1, 0x1b, 0x47, 0xc7, 0x03, 0xc3, 0x76, 0xe8, 0x8b, 0x0a, 0xa7, 0xc5, 0x48, 0x80, 0xd6,
	0xa0, 0xd0, 0x1d, 0x1d, 0x62, 0x96, 0x61, 0x75, 0xed, 0xd2, 0x98, 0x11, 0x63, 0x85, 0xea, 0x45,
	0xae, 0xcc, 0xb6, 0xf5, 0xab, 0x02, 0x10, 0x09, 0xd1, 0x3a, 0x94, 0xc4, 0x31, 0x29, 0xec, 0x98,
	0xb4, 0x97, 0x07, 0x59, 0xd9, 0x6f, 0x77, 0x75, 0xe1, 0x41, 0x11, 0xb1, 0x17, 0x9f, 0x4e, 0xc5,
	0x92, 0x56, 0x28, 0x28, 0x5a, 0x38, 0x9f, 0x4a, 0x12, 0xed, 0x03, 0xc8, 0xef, 0xb7, 0xbb, 0xa8,
	0x06, 0x95, 0x47, 0xbb, 0x5b, 0xed, 0x7b, 0x3b, 0xbb, 0xed, 0xad, 0xc6, 0x14, 0xaa, 0x40, 0x71,
	0x4f, 0xdf, 0x6a, 0xeb, 0x0d, 0x05, 0xcd, 0xc1, 0xec, 0xe6, 0xde, 0x6e, 0x57, 0xdf, 0xd8, 0xec,
	0xee, 0x77, 0xda, 0xf7, 0xef, 0xb7, 0xf5, 0x46, 0x0e, 0x21, 0xa8, 0x87, 0xc2, 0xbb, 0x8f, 0x3e,
	0x6b, 0xeb, 0x8d, 0xbc, 0xf6, 0x42, 0x81, 0xf3, 0x82, 0x88, 0x8d, 0xbe, 0x39, 0xec, 0xb3, 0x4b,
	0x2d, 0x2c, 0xe1, 0x65, 0x28, 0x50, 0x1e, 0x10, 0xaf, 0x78, 0xb5, 0x30, 0xb7, 0x47, 0x3e, 0xf6,
	0x74, 0xa6, 0x8a, 0x5e, 0x56, 0x73, 0x2f, 0x79, 0x59, 0x8d, 0xbd, 0x17, 0xe7, 0x4f, 0x7e, 0x2f,
	0xfe, 0x25, 0x07, 0xb3, 0x89, 0xd7, 0xc8, 0x0c, 0x23, 0xd4, 0x69, 0x2f, 0xd6, 0x2b, 0x50, 0x3b,
	0x34, 0x46, 0x03, 0xec, 0x90, 0xce, 0xc8, 0x27, 0x78, 0x20, 0xc8, 0x3f, 0x2e, 0x9c, 0x78, 0xad,
	0xae, 0x03, 0x18, 0x84, 0x78, 0x76, 0x6f, 0x48, 0x30, 0x6d, 0x12, 0xda, 0x73, 0xad, 0x30, 0xa9,
	0x8f, 0xf0, 0xe8, 0x13, 0xa3, 0x3f, 0xc4, 0x1b, 0x81, 0x89, 0x2e, 0x59, 0x4b, 0xec, 0x39, 0x7d,
	0xf2, 0xc8, 0xb2, 0x04, 0x55, 0x0f, 0xd3, 0xc2, 0x58, 0xdd, 0xe7, 0xe1, 0xbd, 0x20, 0x8b, 0xe2,
	0x93, 0x6c, 0x25, 0x31, 0xc9, 0x6a, 0x3f, 0xe4, 0xa0, 0xc1, 0x4b, 0x2c, 0x7d, 0x27, 0x78, 0x7d,
	0x9a, 0x93, 0x4e, 0x53, 0x3b, 0x86, 0xb9, 0x90, 0xbd, 0xa5, 0x13, 0xbb, 0x1e, 0x32, 0xf1, 0x49,
	0x1f, 0x3c, 0x02, 0x42, 0x5e, 0x09, 0x08, 0x39, 0xc7, 0xd2, 0x99, 0xec, 0xc0, 0xcd, 0xd6, 0xbe,
	0x2d, 0xc3, 0x4c, 0x07, 0x7b, 0x47, 0xb6, 0x89, 0x39, 0xe4, 0x3f, 0x87, 0x2a, 0x9f, 0x33, 0xf9,
	0x32, 0x41, 0xc1, 0xfc, 0x26, 0x6d, 0x9d, 0x0b, 0xa5, 0xf1, 0x2b, 0x56, 0x5b, 0xfc, 0xe6, 0xb7,
	0x3f, 0x5e, 0xe4, 0x16, 0xb4, 0xe6, 0xea, 0xfe, 0xd1, 0x3b, 0xab, 0x1c, 0x0f, 0xfb, 0xac, 0x1d,
	0xd7, 0x95, 0x6b, 0xe8, 0x36, 0x94, 0xb7, 0x31, 0x39, 0x53, 0xe0, 0x29, 0x74, 0x07, 0x2a, 0x81,
	0xb3, 0x9f, 0xdd, 0xfb, 0x0b, 0xa8, 0xf2, 0x6f, 0x5d, 0x67, 0xda, 0xfd, 0x12, 0x4b, 0x4b, 0x45,
	0x0b, 0x3c, 0x2d, 0x16, 0x88, 0xa7, 0xb5, 0xfa, 0x95, 0x6d, 0x7d, 0x8d, 0x1e, 0x40, 0x3d, 0x31,
	0x9c, 0x5f, 0x4c, 0x6c, 0x10, 0x57, 0xb7, 0x5a, 0xe9, 0x9d, 0x02, 0x9d, 0x36, 0x85, 0xb6, 0xa0,
	0xba, 0x8d, 0xc3, 0x2f, 0x7d, 0xe8, 0x5c, 0x32, 0xd6, 0xe9, 0xa2, 0xb4, 0x61, 0x46, 0x8a, 0xe2,
	0x9f, 0x35, 0xcc, 0x2d, 0x40, 0x3b, 0x7e, 0x47, 0x8c, 0xe2, 0x5c, 0xda, 0x7d, 0x8e, 0xaa, 0xa1,
	0x4f, 0xf7, 0x79, 0x2b, 0xcd, 0xab, 0xda, 0x14, 0xba, 0x09, 0xcd, 0x1d, 0xff, 0x2e, 0x9f, 0xf6,
	0x33, 0xb8, 0x3d, 0x83, 0x06, 0x3f, 0x2b, 0xa9, 0x0d, 0xce, 0x27, 0x9e, 0x3c, 0x52, 0xb5, 0x26,
	0x02, 0x5c, 0xbb, 0xcc, 0x6a, 0x76, 0x41, 0x5b, 0x90, 0xa1, 0x18, 0x7d, 0x16, 0xa4, 0x78, 0x7c,
	0x08, 0x73, 0xdb, 0x98, 0x24, 0x1c, 0xfd, 0x97, 0x6d, 0xb7, 0x98, 0x3e, 0xaa, 0x48, 0xab, 0x4d,
	0xa1, 0x0f, 0xa1, 0x29, 0xbe, 0x5b, 0xbe, 0xea, 0xe3, 0x4f, 0xa1, 0x3e, 0x34, 0x38, 0x64, 0x5f,
	0x35, 0xd4, 0xff, 0xd8, 0x49, 0x5c, 0x44, 0x17, 0x64, 0xf4, 0x46, 0x27, 0xc1, 0x20, 0xbc, 0xf6,
	0x9d, 0x02, 0x4d, 0x41, 0x04, 0xd2, 0x65, 0xbc, 0x01, 0x05, 0x7a, 0x47, 0x23, 0x2d, 0x89, 0x9d,
	0xf4, 0xc5, 0xdd, 0x1a, 0xf7, 0xb9, 0x44, 0x9b, 0xa2, 0x21, 0x76, 0x1c, 0x9b, 0xbc, 0x42, 0x88,
	0x5e, 0x89, 0xfd, 0x73, 0x70, 0xe3, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x52, 0x08, 0xd9, 0x68,
	0x9c, 0x18, 0x00, 0x00,
}
