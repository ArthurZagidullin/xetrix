// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// OrderQueryStatus order query status
// swagger:model orderQueryStatus
type OrderQueryStatus string

const (

	// OrderQueryStatusQueryMissed captures enum value "Query_Missed"
	OrderQueryStatusQueryMissed OrderQueryStatus = "Query_Missed"

	// OrderQueryStatusQuerySuccess captures enum value "Query_Success"
	OrderQueryStatusQuerySuccess OrderQueryStatus = "Query_Success"

	// OrderQueryStatusQueryError captures enum value "Query_Error"
	OrderQueryStatusQueryError OrderQueryStatus = "Query_Error"
)

// for schema
var orderQueryStatusEnum []interface{}

func init() {
	var res []OrderQueryStatus
	if err := json.Unmarshal([]byte(`["Query_Missed","Query_Success","Query_Error"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		orderQueryStatusEnum = append(orderQueryStatusEnum, v)
	}
}

func (m OrderQueryStatus) validateOrderQueryStatusEnum(path, location string, value OrderQueryStatus) error {
	if err := validate.Enum(path, location, value, orderQueryStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this order query status
func (m OrderQueryStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOrderQueryStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
