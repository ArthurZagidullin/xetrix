// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transaction.proto

package structs

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TxStatus int32

const (
	TxStatus_UNCONFIRMED    TxStatus = 0
	TxStatus_COLLATERALIZED TxStatus = 1
	TxStatus_SAVED          TxStatus = 2
	TxStatus_CONFIRMED      TxStatus = 3
	TxStatus_CANCELED       TxStatus = 4
)

var TxStatus_name = map[int32]string{
	0: "UNCONFIRMED",
	1: "COLLATERALIZED",
	2: "SAVED",
	3: "CONFIRMED",
	4: "CANCELED",
}

var TxStatus_value = map[string]int32{
	"UNCONFIRMED":    0,
	"COLLATERALIZED": 1,
	"SAVED":          2,
	"CONFIRMED":      3,
	"CANCELED":       4,
}

func (x TxStatus) String() string {
	return proto.EnumName(TxStatus_name, int32(x))
}

func (TxStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{0}
}

type TxReason__TxReasonStatus int32

const (
	TxReason_UNREASON_TX            TxReason__TxReasonStatus = 0
	TxReason_FUND_UNPERFORMED_TX    TxReason__TxReasonStatus = 1
	TxReason_FUND_WAIT_PREPARE_TX   TxReason__TxReasonStatus = 2
	TxReason_FUND_PREPARED_TX       TxReason__TxReasonStatus = 3
	TxReason_FUND_PERFORMED_TX      TxReason__TxReasonStatus = 4
	TxReason_WITHDRAW_TX            TxReason__TxReasonStatus = 5
	TxReason_SELLER_CONTRACT_TX     TxReason__TxReasonStatus = 6
	TxReason_BUYER_CONTRACT_TX      TxReason__TxReasonStatus = 7
	TxReason_CONTRACT_COMMISSION_TX TxReason__TxReasonStatus = 8
)

var TxReason__TxReasonStatus_name = map[int32]string{
	0: "UNREASON_TX",
	1: "FUND_UNPERFORMED_TX",
	2: "FUND_WAIT_PREPARE_TX",
	3: "FUND_PREPARED_TX",
	4: "FUND_PERFORMED_TX",
	5: "WITHDRAW_TX",
	6: "SELLER_CONTRACT_TX",
	7: "BUYER_CONTRACT_TX",
	8: "CONTRACT_COMMISSION_TX",
}

var TxReason__TxReasonStatus_value = map[string]int32{
	"UNREASON_TX":            0,
	"FUND_UNPERFORMED_TX":    1,
	"FUND_WAIT_PREPARE_TX":   2,
	"FUND_PREPARED_TX":       3,
	"FUND_PERFORMED_TX":      4,
	"WITHDRAW_TX":            5,
	"SELLER_CONTRACT_TX":     6,
	"BUYER_CONTRACT_TX":      7,
	"CONTRACT_COMMISSION_TX": 8,
}

func (x TxReason__TxReasonStatus) String() string {
	return proto.EnumName(TxReason__TxReasonStatus_name, int32(x))
}

func (TxReason__TxReasonStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{4, 0}
}

type EventNewTx struct {
	Tx                   *Tx      `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventNewTx) Reset()         { *m = EventNewTx{} }
func (m *EventNewTx) String() string { return proto.CompactTextString(m) }
func (*EventNewTx) ProtoMessage()    {}
func (*EventNewTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{0}
}

func (m *EventNewTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventNewTx.Unmarshal(m, b)
}
func (m *EventNewTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventNewTx.Marshal(b, m, deterministic)
}
func (m *EventNewTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventNewTx.Merge(m, src)
}
func (m *EventNewTx) XXX_Size() int {
	return xxx_messageInfo_EventNewTx.Size(m)
}
func (m *EventNewTx) XXX_DiscardUnknown() {
	xxx_messageInfo_EventNewTx.DiscardUnknown(m)
}

var xxx_messageInfo_EventNewTx proto.InternalMessageInfo

func (m *EventNewTx) GetTx() *Tx {
	if m != nil {
		return m.Tx
	}
	return nil
}

type Query_Tx struct {
	TxId                 string    `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	ContractId           string    `protobuf:"bytes,2,opt,name=contractId,proto3" json:"contractId,omitempty"`
	Reason               *TxReason `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Address              string    `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	FromAddress          string    `protobuf:"bytes,5,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`
	ToAddress            string    `protobuf:"bytes,6,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	InPStxId             string    `protobuf:"bytes,7,opt,name=inPStxId,proto3" json:"inPStxId,omitempty"`
	BlockNumber          uint64    `protobuf:"varint,8,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Query_Tx) Reset()         { *m = Query_Tx{} }
func (m *Query_Tx) String() string { return proto.CompactTextString(m) }
func (*Query_Tx) ProtoMessage()    {}
func (*Query_Tx) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{1}
}

func (m *Query_Tx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query_Tx.Unmarshal(m, b)
}
func (m *Query_Tx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query_Tx.Marshal(b, m, deterministic)
}
func (m *Query_Tx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query_Tx.Merge(m, src)
}
func (m *Query_Tx) XXX_Size() int {
	return xxx_messageInfo_Query_Tx.Size(m)
}
func (m *Query_Tx) XXX_DiscardUnknown() {
	xxx_messageInfo_Query_Tx.DiscardUnknown(m)
}

var xxx_messageInfo_Query_Tx proto.InternalMessageInfo

func (m *Query_Tx) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *Query_Tx) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *Query_Tx) GetReason() *TxReason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *Query_Tx) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Query_Tx) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *Query_Tx) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *Query_Tx) GetInPStxId() string {
	if m != nil {
		return m.InPStxId
	}
	return ""
}

func (m *Query_Tx) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

type Query_RawTx struct {
	FromAddress          string   `protobuf:"bytes,1,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`
	ToAddress            string   `protobuf:"bytes,2,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	Amount               float64  `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	InPStxId             string   `protobuf:"bytes,4,opt,name=inPStxId,proto3" json:"inPStxId,omitempty"`
	BlockNumber          uint64   `protobuf:"varint,5,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query_RawTx) Reset()         { *m = Query_RawTx{} }
func (m *Query_RawTx) String() string { return proto.CompactTextString(m) }
func (*Query_RawTx) ProtoMessage()    {}
func (*Query_RawTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{2}
}

func (m *Query_RawTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query_RawTx.Unmarshal(m, b)
}
func (m *Query_RawTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query_RawTx.Marshal(b, m, deterministic)
}
func (m *Query_RawTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query_RawTx.Merge(m, src)
}
func (m *Query_RawTx) XXX_Size() int {
	return xxx_messageInfo_Query_RawTx.Size(m)
}
func (m *Query_RawTx) XXX_DiscardUnknown() {
	xxx_messageInfo_Query_RawTx.DiscardUnknown(m)
}

var xxx_messageInfo_Query_RawTx proto.InternalMessageInfo

func (m *Query_RawTx) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *Query_RawTx) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *Query_RawTx) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Query_RawTx) GetInPStxId() string {
	if m != nil {
		return m.InPStxId
	}
	return ""
}

func (m *Query_RawTx) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

type Response_Tx struct {
	Created              bool        `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Confirmed            bool        `protobuf:"varint,2,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Object               *Tx         `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	Items                []*Tx       `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	ItemsCount           uint32      `protobuf:"varint,5,opt,name=itemsCount,proto3" json:"itemsCount,omitempty"`
	QueryStatus          QueryStatus `protobuf:"varint,6,opt,name=QueryStatus,proto3,enum=structs.QueryStatus" json:"QueryStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Response_Tx) Reset()         { *m = Response_Tx{} }
func (m *Response_Tx) String() string { return proto.CompactTextString(m) }
func (*Response_Tx) ProtoMessage()    {}
func (*Response_Tx) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{3}
}

func (m *Response_Tx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Tx.Unmarshal(m, b)
}
func (m *Response_Tx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Tx.Marshal(b, m, deterministic)
}
func (m *Response_Tx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Tx.Merge(m, src)
}
func (m *Response_Tx) XXX_Size() int {
	return xxx_messageInfo_Response_Tx.Size(m)
}
func (m *Response_Tx) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Tx.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Tx proto.InternalMessageInfo

func (m *Response_Tx) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response_Tx) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *Response_Tx) GetObject() *Tx {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *Response_Tx) GetItems() []*Tx {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Response_Tx) GetItemsCount() uint32 {
	if m != nil {
		return m.ItemsCount
	}
	return 0
}

func (m *Response_Tx) GetQueryStatus() QueryStatus {
	if m != nil {
		return m.QueryStatus
	}
	return QueryStatus_Query_Missed
}

type TxReason struct {
	TxId              string                   `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	ContractId        string                   `protobuf:"bytes,2,opt,name=contractId,proto3" json:"contractId,omitempty"`
	WithdrawalOrderId string                   `protobuf:"bytes,3,opt,name=withdrawalOrderId,proto3" json:"withdrawalOrderId,omitempty"`
	Status            TxReason__TxReasonStatus `protobuf:"varint,4,opt,name=status,proto3,enum=structs.TxReason__TxReasonStatus" json:"status,omitempty"`
	// In-Out payment system transaction Ids
	InPStxId             string   `protobuf:"bytes,5,opt,name=inPStxId,proto3" json:"inPStxId,omitempty"`
	OutPStxId            string   `protobuf:"bytes,6,opt,name=outPStxId,proto3" json:"outPStxId,omitempty"`
	PreparePStxId        string   `protobuf:"bytes,7,opt,name=preparePStxId,proto3" json:"preparePStxId,omitempty"`
	BlockNumber          uint64   `protobuf:"varint,8,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxReason) Reset()         { *m = TxReason{} }
func (m *TxReason) String() string { return proto.CompactTextString(m) }
func (*TxReason) ProtoMessage()    {}
func (*TxReason) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{4}
}

func (m *TxReason) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxReason.Unmarshal(m, b)
}
func (m *TxReason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxReason.Marshal(b, m, deterministic)
}
func (m *TxReason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxReason.Merge(m, src)
}
func (m *TxReason) XXX_Size() int {
	return xxx_messageInfo_TxReason.Size(m)
}
func (m *TxReason) XXX_DiscardUnknown() {
	xxx_messageInfo_TxReason.DiscardUnknown(m)
}

var xxx_messageInfo_TxReason proto.InternalMessageInfo

func (m *TxReason) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *TxReason) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *TxReason) GetWithdrawalOrderId() string {
	if m != nil {
		return m.WithdrawalOrderId
	}
	return ""
}

func (m *TxReason) GetStatus() TxReason__TxReasonStatus {
	if m != nil {
		return m.Status
	}
	return TxReason_UNREASON_TX
}

func (m *TxReason) GetInPStxId() string {
	if m != nil {
		return m.InPStxId
	}
	return ""
}

func (m *TxReason) GetOutPStxId() string {
	if m != nil {
		return m.OutPStxId
	}
	return ""
}

func (m *TxReason) GetPreparePStxId() string {
	if m != nil {
		return m.PreparePStxId
	}
	return ""
}

func (m *TxReason) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

type Tx struct {
	// @inject_tag: bson:"_id,omitempty"
	BsonId               []byte    `protobuf:"bytes,7,opt,name=bsonId,proto3" json:"bsonId,omitempty" bson:"_id,omitempty"`
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FromAddress          string    `protobuf:"bytes,2,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`
	ToAddress            string    `protobuf:"bytes,3,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	Amount               float64   `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	CurrencySymbol       string    `protobuf:"bytes,5,opt,name=currencySymbol,proto3" json:"currencySymbol,omitempty"`
	Reason               *TxReason `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	Status               TxStatus  `protobuf:"varint,8,opt,name=status,proto3,enum=structs.TxStatus" json:"status,omitempty"`
	Related              []*Tx     `protobuf:"bytes,9,rep,name=related,proto3" json:"related,omitempty"`
	Dependencies         []*Tx     `protobuf:"bytes,10,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	FromAddressOwnerId   string    `protobuf:"bytes,11,opt,name=fromAddressOwnerId,proto3" json:"fromAddressOwnerId,omitempty"`
	ToAddressOwnerId     string    `protobuf:"bytes,12,opt,name=toAddressOwnerId,proto3" json:"toAddressOwnerId,omitempty"`
	CreatedAt            string    `protobuf:"bytes,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Tx) Reset()         { *m = Tx{} }
func (m *Tx) String() string { return proto.CompactTextString(m) }
func (*Tx) ProtoMessage()    {}
func (*Tx) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{5}
}

func (m *Tx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tx.Unmarshal(m, b)
}
func (m *Tx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tx.Marshal(b, m, deterministic)
}
func (m *Tx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tx.Merge(m, src)
}
func (m *Tx) XXX_Size() int {
	return xxx_messageInfo_Tx.Size(m)
}
func (m *Tx) XXX_DiscardUnknown() {
	xxx_messageInfo_Tx.DiscardUnknown(m)
}

var xxx_messageInfo_Tx proto.InternalMessageInfo

func (m *Tx) GetBsonId() []byte {
	if m != nil {
		return m.BsonId
	}
	return nil
}

func (m *Tx) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Tx) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *Tx) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *Tx) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Tx) GetCurrencySymbol() string {
	if m != nil {
		return m.CurrencySymbol
	}
	return ""
}

func (m *Tx) GetReason() *TxReason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *Tx) GetStatus() TxStatus {
	if m != nil {
		return m.Status
	}
	return TxStatus_UNCONFIRMED
}

func (m *Tx) GetRelated() []*Tx {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Tx) GetDependencies() []*Tx {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

func (m *Tx) GetFromAddressOwnerId() string {
	if m != nil {
		return m.FromAddressOwnerId
	}
	return ""
}

func (m *Tx) GetToAddressOwnerId() string {
	if m != nil {
		return m.ToAddressOwnerId
	}
	return ""
}

func (m *Tx) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func init() {
	proto.RegisterEnum("structs.TxStatus", TxStatus_name, TxStatus_value)
	proto.RegisterEnum("structs.TxReason__TxReasonStatus", TxReason__TxReasonStatus_name, TxReason__TxReasonStatus_value)
	proto.RegisterType((*EventNewTx)(nil), "structs.EventNewTx")
	proto.RegisterType((*Query_Tx)(nil), "structs.Query_Tx")
	proto.RegisterType((*Query_RawTx)(nil), "structs.Query_RawTx")
	proto.RegisterType((*Response_Tx)(nil), "structs.Response_Tx")
	proto.RegisterType((*TxReason)(nil), "structs.TxReason")
	proto.RegisterType((*Tx)(nil), "structs.Tx")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceTransactionClient is the client API for ServiceTransaction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceTransactionClient interface {
	CreateTx(ctx context.Context, in *Tx, opts ...grpc.CallOption) (*Response_Tx, error)
	GetTx(ctx context.Context, in *Query_Tx, opts ...grpc.CallOption) (*Response_Tx, error)
	GetAllTxs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Response_Tx, error)
}

type serviceTransactionClient struct {
	cc *grpc.ClientConn
}

func NewServiceTransactionClient(cc *grpc.ClientConn) ServiceTransactionClient {
	return &serviceTransactionClient{cc}
}

func (c *serviceTransactionClient) CreateTx(ctx context.Context, in *Tx, opts ...grpc.CallOption) (*Response_Tx, error) {
	out := new(Response_Tx)
	err := c.cc.Invoke(ctx, "/structs.ServiceTransaction/CreateTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceTransactionClient) GetTx(ctx context.Context, in *Query_Tx, opts ...grpc.CallOption) (*Response_Tx, error) {
	out := new(Response_Tx)
	err := c.cc.Invoke(ctx, "/structs.ServiceTransaction/GetTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceTransactionClient) GetAllTxs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Response_Tx, error) {
	out := new(Response_Tx)
	err := c.cc.Invoke(ctx, "/structs.ServiceTransaction/GetAllTxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceTransactionServer is the server API for ServiceTransaction service.
type ServiceTransactionServer interface {
	CreateTx(context.Context, *Tx) (*Response_Tx, error)
	GetTx(context.Context, *Query_Tx) (*Response_Tx, error)
	GetAllTxs(context.Context, *Empty) (*Response_Tx, error)
}

func RegisterServiceTransactionServer(s *grpc.Server, srv ServiceTransactionServer) {
	s.RegisterService(&_ServiceTransaction_serviceDesc, srv)
}

func _ServiceTransaction_CreateTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tx)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceTransactionServer).CreateTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceTransaction/CreateTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceTransactionServer).CreateTx(ctx, req.(*Tx))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceTransaction_GetTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query_Tx)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceTransactionServer).GetTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceTransaction/GetTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceTransactionServer).GetTx(ctx, req.(*Query_Tx))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceTransaction_GetAllTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceTransactionServer).GetAllTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/structs.ServiceTransaction/GetAllTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceTransactionServer).GetAllTxs(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceTransaction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "structs.ServiceTransaction",
	HandlerType: (*ServiceTransactionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTx",
			Handler:    _ServiceTransaction_CreateTx_Handler,
		},
		{
			MethodName: "GetTx",
			Handler:    _ServiceTransaction_GetTx_Handler,
		},
		{
			MethodName: "GetAllTxs",
			Handler:    _ServiceTransaction_GetAllTxs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

func init() { proto.RegisterFile("transaction.proto", fileDescriptor_2cc4e03d2c28c490) }

var fileDescriptor_2cc4e03d2c28c490 = []byte{
	// 918 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x4d, 0x6f, 0xeb, 0x44,
	0x14, 0xad, 0x9d, 0x2f, 0xe7, 0x26, 0xcd, 0x4b, 0x2e, 0x7d, 0xc5, 0xca, 0xab, 0x50, 0x5f, 0xf8,
	0xd0, 0x6b, 0x05, 0x89, 0xe8, 0x93, 0x90, 0x60, 0x67, 0x12, 0xf7, 0x11, 0x94, 0x26, 0x65, 0xe2,
	0x52, 0x60, 0x13, 0x39, 0xf6, 0xbc, 0x62, 0x48, 0x3c, 0xd1, 0x78, 0xd2, 0xba, 0x4b, 0x58, 0xb2,
	0xe5, 0x27, 0xf0, 0x6b, 0x58, 0xc3, 0x9a, 0x15, 0xfc, 0x0f, 0xe4, 0xb1, 0x93, 0x38, 0x0e, 0xa5,
	0x88, 0x9d, 0xe7, 0x9c, 0x3b, 0x33, 0x67, 0xee, 0x3d, 0xf7, 0x1a, 0x1a, 0x82, 0xdb, 0x7e, 0x60,
	0x3b, 0xc2, 0x63, 0x7e, 0x7b, 0xc1, 0x99, 0x60, 0x58, 0x0a, 0x04, 0x5f, 0x3a, 0x22, 0x68, 0x56,
	0x1d, 0x36, 0x9f, 0xaf, 0xe0, 0xe6, 0xd1, 0x0d, 0x63, 0x37, 0x33, 0xda, 0xb1, 0x17, 0x5e, 0xc7,
	0xf6, 0x7d, 0x26, 0xec, 0x68, 0x4f, 0x10, 0xb3, 0xad, 0x13, 0x00, 0xf3, 0x96, 0xfa, 0x62, 0x48,
	0xef, 0xac, 0x10, 0x9f, 0x81, 0x2a, 0x42, 0x5d, 0x39, 0x56, 0x5e, 0x54, 0xce, 0x2a, 0xed, 0xe4,
	0xbc, 0xb6, 0x15, 0x12, 0x55, 0x84, 0xad, 0x1f, 0x54, 0xd0, 0xbe, 0x58, 0x52, 0x7e, 0x3f, 0xb1,
	0x42, 0x44, 0xc8, 0x8b, 0xb0, 0xef, 0xca, 0xd8, 0x32, 0x91, 0xdf, 0xf8, 0x16, 0x80, 0xc3, 0x7c,
	0xc1, 0x6d, 0x47, 0xf4, 0x5d, 0x5d, 0x95, 0x4c, 0x0a, 0xc1, 0x13, 0x28, 0x72, 0x6a, 0x07, 0xcc,
	0xd7, 0x73, 0xf2, 0x86, 0x46, 0xfa, 0x06, 0x49, 0x90, 0x24, 0x00, 0x75, 0x28, 0xd9, 0xae, 0xcb,
	0x69, 0x10, 0xe8, 0x79, 0x79, 0xce, 0x6a, 0x89, 0xc7, 0x50, 0x79, 0xcd, 0xd9, 0xdc, 0x48, 0xd8,
	0x82, 0x64, 0xd3, 0x10, 0x1e, 0x41, 0x59, 0xb0, 0x15, 0x5f, 0x94, 0xfc, 0x06, 0xc0, 0x26, 0x68,
	0x9e, 0x7f, 0x39, 0x96, 0xe2, 0x4b, 0x92, 0x5c, 0xaf, 0xa3, 0xb3, 0xa7, 0x33, 0xe6, 0x7c, 0x3f,
	0x5c, 0xce, 0xa7, 0x94, 0xeb, 0xda, 0xb1, 0xf2, 0x22, 0x4f, 0xd2, 0x50, 0xeb, 0x17, 0x05, 0x2a,
	0x71, 0x0e, 0x88, 0x1d, 0x25, 0x2c, 0xa3, 0x46, 0x79, 0x44, 0x8d, 0x9a, 0x55, 0x73, 0x08, 0x45,
	0x7b, 0xce, 0x96, 0xbe, 0x90, 0x29, 0x51, 0x48, 0xb2, 0xda, 0x52, 0x99, 0xff, 0x77, 0x95, 0x85,
	0x5d, 0x95, 0x7f, 0x29, 0x50, 0x21, 0x34, 0x58, 0x30, 0x3f, 0xa0, 0x51, 0xb1, 0x74, 0x28, 0x39,
	0x9c, 0xda, 0x82, 0xc6, 0xf5, 0xd2, 0xc8, 0x6a, 0x19, 0xa9, 0x73, 0x98, 0xff, 0xda, 0xe3, 0x73,
	0x1a, 0x57, 0x4c, 0x23, 0x1b, 0x00, 0xdf, 0x86, 0x22, 0x9b, 0x7e, 0x47, 0x1d, 0x91, 0x14, 0x6c,
	0xcb, 0x12, 0x09, 0x85, 0xcf, 0xa1, 0xe0, 0x09, 0x3a, 0x8f, 0x0a, 0x95, 0xcb, 0xc6, 0xc4, 0x4c,
	0x64, 0x0c, 0xf9, 0xd1, 0x95, 0x2f, 0x8d, 0x04, 0xef, 0x93, 0x14, 0x82, 0x1f, 0x25, 0x49, 0x1d,
	0x0b, 0x5b, 0x2c, 0xe3, 0x9a, 0xd5, 0xce, 0x0e, 0xd6, 0x07, 0xa5, 0x38, 0x92, 0x0e, 0x6c, 0xfd,
	0x94, 0x07, 0x6d, 0x65, 0x9d, 0xff, 0xe5, 0xc8, 0xf7, 0xa1, 0x71, 0xe7, 0x89, 0x6f, 0x5d, 0x6e,
	0xdf, 0xd9, 0xb3, 0x11, 0x77, 0x29, 0xef, 0xbb, 0xf2, 0xad, 0x65, 0xb2, 0x4b, 0xe0, 0xc7, 0x50,
	0x0c, 0x62, 0x85, 0x79, 0xa9, 0xf0, 0xf9, 0x8e, 0x7f, 0xdb, 0x93, 0xd5, 0x57, 0x22, 0x37, 0xd9,
	0xb0, 0x55, 0xcf, 0x42, 0xa6, 0x9e, 0x47, 0x50, 0x66, 0x4b, 0x91, 0x90, 0x89, 0x5f, 0xd7, 0x00,
	0xbe, 0x03, 0xfb, 0x0b, 0x4e, 0x17, 0x36, 0xa7, 0x5b, 0xa6, 0xdd, 0x06, 0xff, 0x83, 0x73, 0xff,
	0x50, 0xe0, 0x49, 0x46, 0x1d, 0x3e, 0x81, 0xca, 0xd5, 0x90, 0x98, 0xc6, 0x78, 0x34, 0x9c, 0x58,
	0x5f, 0xd5, 0xf7, 0xf0, 0x4d, 0x78, 0xe3, 0xfc, 0x6a, 0xd8, 0x9b, 0x5c, 0x0d, 0x2f, 0x4d, 0x72,
	0x3e, 0x22, 0x17, 0x66, 0x2f, 0x22, 0x14, 0xd4, 0xe1, 0x40, 0x12, 0xd7, 0x46, 0xdf, 0x9a, 0x5c,
	0x12, 0xf3, 0xd2, 0x20, 0x66, 0xc4, 0xa8, 0x78, 0x00, 0x75, 0xc9, 0x24, 0xa0, 0x8c, 0xcf, 0xe1,
	0x53, 0x68, 0xc4, 0x68, 0xfa, 0x98, 0x7c, 0x74, 0xe1, 0x75, 0xdf, 0xfa, 0xac, 0x47, 0x8c, 0xeb,
	0x08, 0x28, 0xe0, 0x21, 0xe0, 0xd8, 0x1c, 0x0c, 0x4c, 0x32, 0xe9, 0x8e, 0x86, 0x16, 0x31, 0xba,
	0x56, 0x84, 0x17, 0xa3, 0xfd, 0x9f, 0x5e, 0x7d, 0x9d, 0x81, 0x4b, 0xd8, 0x84, 0xc3, 0x35, 0xd0,
	0x1d, 0x5d, 0x5c, 0xf4, 0xc7, 0xe3, 0x7e, 0xac, 0x5d, 0x6b, 0xfd, 0x9e, 0x03, 0xd5, 0x0a, 0xa3,
	0x8e, 0x9a, 0x06, 0xcc, 0x4f, 0x12, 0x55, 0x25, 0xc9, 0x0a, 0x6b, 0xa0, 0x7a, 0x2b, 0x73, 0xa8,
	0x9e, 0x9b, 0xed, 0x5c, 0xf5, 0x91, 0xce, 0xcd, 0x3d, 0xdc, 0xb9, 0xf9, 0xad, 0xce, 0x7d, 0x0f,
	0x6a, 0xce, 0x92, 0x73, 0xea, 0x3b, 0xf7, 0xe3, 0xfb, 0xf9, 0x94, 0xcd, 0x92, 0x7a, 0x67, 0xd0,
	0xd4, 0x30, 0x2c, 0x3e, 0x36, 0x0c, 0x4f, 0xd6, 0xbe, 0xd3, 0xa4, 0xef, 0xd2, 0xa1, 0x19, 0x9f,
	0xbd, 0x0b, 0x25, 0x4e, 0x67, 0xb2, 0xd3, 0xcb, 0xbb, 0xed, 0xb8, 0xe2, 0xb0, 0x03, 0x55, 0x97,
	0x2e, 0xa8, 0xef, 0x52, 0xdf, 0xf1, 0x68, 0xa0, 0xc3, 0x6e, 0xec, 0x56, 0x00, 0xb6, 0x01, 0x53,
	0xa9, 0x19, 0xdd, 0xf9, 0xb2, 0x53, 0x2a, 0xf2, 0x65, 0xff, 0xc0, 0xe0, 0x29, 0xd4, 0xd7, 0xa9,
	0x5a, 0x45, 0x57, 0x65, 0xf4, 0x0e, 0x2e, 0x67, 0x50, 0x3c, 0x8e, 0x0c, 0xa1, 0xef, 0xc7, 0x79,
	0x5e, 0x03, 0xa7, 0xd7, 0x51, 0x8b, 0xa7, 0xfd, 0xda, 0x1d, 0x0d, 0xcf, 0xfb, 0x91, 0xa5, 0xea,
	0x7b, 0x88, 0x50, 0xeb, 0x8e, 0x06, 0x03, 0xc3, 0x32, 0x89, 0x31, 0xe8, 0x7f, 0x63, 0xf6, 0xea,
	0x0a, 0x96, 0xa1, 0x30, 0x36, 0xbe, 0x34, 0x7b, 0x75, 0x15, 0xf7, 0xa1, 0xbc, 0x89, 0xce, 0x61,
	0x15, 0xb4, 0xae, 0x31, 0xec, 0x9a, 0x03, 0xb3, 0x57, 0xcf, 0x9f, 0xfd, 0xaa, 0x00, 0x8e, 0x29,
	0xbf, 0xf5, 0x1c, 0x6a, 0x6d, 0xfe, 0xa5, 0xf8, 0x39, 0x68, 0x5d, 0x79, 0xb9, 0x15, 0x62, 0x3a,
	0x21, 0xcd, 0xcd, 0x3c, 0x4a, 0x8d, 0xd6, 0xd6, 0xb3, 0x1f, 0x7f, 0xfb, 0xf3, 0x67, 0xf5, 0x69,
	0xab, 0xde, 0x99, 0xdc, 0x7e, 0xf8, 0x81, 0xdd, 0x89, 0x85, 0x4f, 0x44, 0xf8, 0x89, 0x72, 0x8a,
	0x67, 0x50, 0x78, 0x45, 0x85, 0x15, 0x62, 0x63, 0x7b, 0x96, 0x4d, 0x1e, 0x3c, 0x6e, 0x0f, 0x5f,
	0x42, 0xf9, 0x15, 0x15, 0xc6, 0x6c, 0x66, 0x85, 0x01, 0xd6, 0xd6, 0x41, 0xe6, 0x7c, 0x21, 0xee,
	0x1f, 0xda, 0x34, 0x2d, 0xca, 0x9f, 0xf9, 0xcb, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x69, 0xd9,
	0x8b, 0x87, 0x16, 0x08, 0x00, 0x00,
}
